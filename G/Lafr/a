            #c look
            $De = Rs&Described || h;
            # unless situation is changing
            $action = neighbours.filter(n => ns&Amountto > 1).length;
            action and return
            if (!De) {
                if (!Rs&Here && ps&Gens && !ps&self) {
                    Rs&Wantsto = 'pull';
                    Rs&Amountto ||= 2;
                }
                else {
                    return me&waits,"Z!h"
                }
            }
            else {
            
            
            # figaro dialaptitudial loaves
            # new!
            
            
            if (!ps&Code) {
                # Code may be Here without string
                Des&string == null and return me&waits,"De!string",0,'B'
            }
            
            # into time/desire for
            me&rollbs,R,'Settled,Wantsto';
            ly&tree = De;
            ry&tree = P;
            v
            # faulter the autocommit
            Rs&Settled != Ps&dige and delete Rs&Settled
            
            # centralised pause
            ps&LetGrow and return gs&fs = 7
            
            # init kinda thing
            if (Des&string == null && Ps&string != null) {
                !ps&Code and throw "init pull !Code"
                hs&string = Ps&string;
                Rs&Whichto = 'pull';
            }
            
            # notice situation
            $Settle = &{
                Rs&Settled = Ps&dige;
                delete Rs&Wantsto;
                delete Rs&Amountto;
                Rs&Whichto ||= 'pull';
                if (Rs&Committing) {
                    delete Rs&Committing;
                    me&mtsc,en,'made-commit',"pushed",'B';
                    Rs&Whichto = 'push';
                }
            };
            # De may change since push
            Rs&Committing && Rs&Committing == Ps&string && Settle()
            # and separately:
            De && Des&string == Ps&string and Settle()
            else {
            # notice situation
            $Settle = &{
                Rs&Settled = Ps&dige;
                delete Rs&Wantsto;
                delete Rs&Amountto;
                Rs&Whichto ||= 'pull';
                if (Rs&Committing) {
                    delete Rs&Committing;
                    me&mtsc,en,'made-commit',"pushed",'B';
                    Rs&Whichto = 'push';
                }
            };
            # De may change since push
            Rs&Committing && Rs&Committing == Ps&string && Settle()
            # and separately:
            De && Des&string == Ps&string and Settle()
            else {
                if (Rs&Settled || Qc&el == 9) {
                    # we sync, they follow
                    Rs&Amountto ||= 2;
                    Rs&Wantsto = 'push';
                }
                else {
                    # start different or their updates
                    Rs&Amountto = 1;
                    $someSettled = neighbours.filter(n => ns&Settled).length;
                    someSettled and Rs&Wantsto ||= 'push';
                    Rs&Wantsto ||= 'pull';
                }
            }
            
            
            
            if (Rs&Wantsto) {
                Rs&Amountto ||= 1
                Rs&Unsure and Rs&Amountto = 1
            }
            
            }
            
            $goingto = Rs&Wantsto || Rs&Whichto;
            $redirection = goingto != Rs&Whichto;
            $to = goingto == 'pull' ? l : 
            
            
            
            
            
            
            
            
                
