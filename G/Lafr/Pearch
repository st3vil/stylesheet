# proxy Search!!!!!!
$Search = me&Rsc,R,'^^Inn';
$upting = Searchs&_ting;
!upting and throw "^^Inn!_ting"
Rs&Inn = R;
# with of:w notifies from
$Ghodig = 4s&Ghodig;
Rs&Ghodigup = &QP{
    # from Ghodig/sub/...c&ready()
    # towards Qc&ready() via refresh
    # < many Q thing, many P thing...
    Qs&notsync = Qs&Want_Check = 1;
    Searchs&_ting(Q);
    Qs&P != P and ~>5 QP:
}
# with knowings about !!!!!!!!!!!
Rs&_ting = &st{
    !isC(s) and throw "ting !C"
    t != null and throw "otherstuff"
    sc&ready = &CP{
        ~>5 new: C.t, Ps&dige
        $y = &{
            R.t != 'Wayout' and ~>6 Wayoutnot: R.t
            me&elvis,R,'tingtodo'
        };
        G&yl,5,y;
    }
    $re = upting(s);
    $Q = s;
    $P = Qs&P;
    !P and return ~>5 upting!P: Q.t
    # c&of is containing, s&of is having
    if (Qc&of == 'w') {
        # Q recycles, property of the %ting
        if (!Qy&waypoll) {
            i $Ghodig/sub/#Q.t/#R.t:s
            $r = me&Rsc,ya,'R';
            # < story
            # r && r != R and ac(R,'tukova',r)
            yas&R = R;
            yac&ready = &w{
                # keep R up to date, captured by this function
                $r = me&Rsc,R,'Inn';
                rs&Ghodigup(Q,P)
            }
            Qy&waypoll = ya;
        }
    }
    # < use a new G&way that _tings
    #   its Wayc&chin is creating the sub!!
    # < Searches may trust upstream,
    return re
}

me&rollbs,R,'icount',0;
$ie = ++Rs&icount;
me&tsc,"!e!e!ee",ie,"p" .sc.fs = 20;
# run field of exclaimation into others
#!!!!!!!!!!!!!!!!!!!
n g  R %ting:w
#throw "Wouble", "Fix"
n a  R %ting:w
#!!!!!!!! !!!! !!!!!!
