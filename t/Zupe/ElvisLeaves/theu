--- 
c: 
  s: steve
sc: 
  z: 
    - 
      c: 
        W: of
      t: i
      "y": 
        cv: '0.001'
        in: &1 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$ov,@Me) = @M;\nif (ref $s) {\n    $A = $s;\n}\nelse {\n    my $i = $A;\n    $A = {%$A};\n    $A->{t} = $s;\n    $A->{y} = $A;\n    $A->{y}->{cv} = 0;\n    $A->{c} = {};\n    $A->{sc} = {};\n    $A->{up} = $i;\n    $A->{c}->{ip} = [@{$A->{up}->{c}->{ip}||[]}, $A->{up}->{c}->{ipi}++];\n    $A->{c}->{sip} = join' ',@{$A->{c}->{ip}};\n    $A->{V} && $G->{h}->($A,$C,$G,$T,'say','saygr',\"$A->{c}->{sip} $A->{t} from $i->{t}\");\n    $A->{1} = $A;\n}\nif ($ov) {\n    $ov /= 10 while $ov >= 1;\n    $A->{c}->{ov} = $ov;\n    if (@Me) {\n        $A->{c}->{N} = \\@Me;\n    }\n    $G->{h}->($A,$C,$G,$T,\"throat\");\n}\nreturn $A\n};"
          sc: 
            acgt: s ov
            args: A,C,G,T,s,ov
            dige: 64c7c3e764dc
            of: i
          t: A
          "y": 
            cv: '0.1'
            next: &44 
              c: 
                code: !!perl/code: '{ "DUMMY" }'
                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $C = {};\n$C->{t} = $s->{t};\n$C->{y}->{cv} = $s->{y}->{cv};\n$C->{c}->{s} = $s->{c}->{s} if exists $s->{c}->{s};\n$C->{sc} = {%{$s->{sc}}};\nreturn $C;\n};"
              sc: 
                acgt: s
                args: A,C,G,T,s
                dige: c18865f42d0f
                of: i
              t: Chade
              "y": 
                cv: '0.1'
                next: &43 
                  c: 
                    code: !!perl/code: '{ "DUMMY" }'
                    s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($l,$o,@Me) = @M;\nmy $E = $l->{c}->{s} if $l;\nmy $e = $o->{c}->{s};\nmy @p = (['t'],[y=>'cv'],[c=>{}],[sc=>{}]);\nwhile (@p) {\n    my $p = shift @p;\n    my ($nk,$gk) = @$p;\n    my $u = $E->{\"$nk\"}; # Eustobe\n    my $v = $e->{\"$nk\"}; # revelation\n    if (ref $gk) {\n        keys %$gk == 0 || die \"Given a ref: \".ki $gk;\n        $gk->{\"$_\"}++ for keys(%$u), keys (%$v);\n        unshift @p, [$nk,$_] for keys %$gk;\n        next;\n    }\n    my $i = {};\n    if ($gk) {\n        if (!exists $u->{\"$gk\"}) {\n            $o->{c}->{new}->{\"$nk\"}->{\"$gk\"} = $i;\n        }\n        elsif (!exists $v->{\"$gk\"}) {\n            $o->{c}->{gone}->{\"$nk\"}->{\"$gk\"} = $i;\n        }\n        elsif ($u->{\"$gk\"} ne $v->{\"$gk\"}) {\n            $o->{c}->{diff}->{\"$nk\"}->{\"$gk\"} = $i;\n        }\n        else {\n            $o->{c}->{same}->{\"$nk\"}->{\"$gk\"} = $i;\n        }\n\n    }\n    else {\n        if (!exists $E->{\"$nk\"}) {\n            $o->{c}->{new}->{\"$nk\"} = $i;\n        }\n        elsif (!exists $e->{\"$nk\"}) {\n            $o->{c}->{gone}->{\"$nk\"} = $i;\n        }\n        elsif ($u ne $v) {\n            $o->{c}->{diff}->{\"$nk\"} = $i;\n        }\n        else {\n            $o->{c}->{same}->{\"$nk\"} = $i;\n        }\n    }\n}\nfor (grep { $o->{c}->{\"$_\"} } qw'new gone diff') {\n    $o->{c}->{cha}->{$_} = $o->{c}->{\"$_\"};\n}\n};"
                  sc: 
                    acgt: l o
                    args: A,C,G,T,l,o
                    dige: 50ea8e3e013f
                    of: i
                  t: Chang
                  "y": 
                    cv: '0.1'
                    next: &2 
                      c: 
                        code: !!perl/code: '{ "DUMMY" }'
                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sort;\nmy $it = pop @Me if ref $Me[-1] eq 'CODE';\nif (@Me == 1) {\n    my $i = shift @Me;\n    if (ref $i eq 'SCALAR') {\n        $sort = 1;\n        $i = $$i;\n    }\n    @Me = split ',', $i;\n}\nmy $in;$in = sub {\n    my ($p,$s,$i) = @_;\n    if (!@$i || @$i==1 &&\n        ref $s ne 'HASH' && $i->[0] =~ /\\?$/) {\n        return [$s,@$p];\n    }\n    defined $s || return;\n    die \"NO \".wdump 3,[$p,$s] if ref $s ne 'HASH';\n    shift @$i;\n    my @r = keys %$s;\n    @r = sort @r if $sort;\n    map {\n        my $v = $s->{\"$_\"};\n        $in->([@$p,$_],$v,[@$i]);\n    } @r;\n\n};\nmy @are = grep{defined} $in->([],$s,[@Me]);\nif ($it) {\n    $it->(@$_) for @are \n}\nelse {\n    sub { shift @are }\n}\n};"
                      sc: 
                        acgt: s
                        args: A,C,G,T,s
                        dige: a6310e0cef54
                        of: i
                      t: Chew
                      "y": 
                        cv: '0.1'
                        next: &3 
                          c: 
                            code: !!perl/code: '{ "DUMMY" }'
                            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$hs,@Me) = @M;\nmy $C = {};\n$C->{y}->{A} = $A;\n$C->{t} = $s->{t};\n$C->{y}->{cv} = $s->{y}->{cv};\n$C->{c}->{s} = $s;\n$C->{c}->{hs} = $hs if $hs;\nreturn $C;\n};"
                          sc: 
                            acgt: s hs
                            args: A,C,G,T,s,hs
                            dige: 575e402ec75c
                            of: i
                          t: Chs
                          "y": 
                            cv: '0.1'
                            next: &4 
                              c: 
                                code: !!perl/code: '{ "DUMMY" }'
                                s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$D,@Me) = @M;\nref $A || die \"nmonref A!\";\n$A->{bangdesk}->{bang}->{Cngek} = sub {\n    $G->{h}->($A,$C,$G,$T,'say','sayre',\"was Cngk; \".ki($s).\"\\nWith: \".ki($D))\n} if 0;\nreturn 1 if $D->{c}->{any};\ndie \"nonNKnk\".ki$D if !$D->{c}->{nk};\nreturn 0 if !exists $s->{$D->{c}->{nk}};\nreturn [$s->{$D->{c}->{nk}}] if !exists $D->{c}->{gk};\nreturn 0 if !exists $s->{$D->{c}->{nk}}->{$D->{c}->{gk}};\nreturn [$s->{$D->{c}->{nk}}->{$D->{c}->{gk}}];\n};"
                              sc: 
                                acgt: s D
                                args: A,C,G,T,s,D
                                dige: fb3b76b156d6
                                of: i
                              t: Cngk
                              "y": 
                                cv: '0.1'
                                next: &5 
                                  c: 
                                    code: !!perl/code: '{ "DUMMY" }'
                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy ($t,@e) = @$s;\nif (ref $t eq 'SCALAR') {\n    $C->{c} = $G->{h}->($A,$C,$G,$T,\"peel\",$$t);\n}\nelsif (ref $t eq 'ARRAY') {\n    die \"Aray: \".wdump 3, $s;\n}\nelsif (ref $t) {\n    die \"reft: \".wdump 3, $s;\n}\nelse {\n    $C->{t} = $t;\n}\nif (!@e) {\n    $C->{c}->{W} = $C->{t};\n}\nelse {\n    my ($y,$c,$sc,@e) = @e;\n    $C->{c}->{s} = $c if !ref $c;\n    $C->{c} = $c if ref $c eq 'HASH';\n    $C->{c} = $G->{h}->($A,$C,$G,$T,\"peel\",$$c) if ref $c eq 'SCALAR';\n    $sc = $G->{h}->($A,$C,$G,$T,\"peel\",$$sc) if $sc eq 'SCALAR';\n    $sc = {} if $sc eq '';\n    $sc = $G->{h}->($A,$C,$G,$T,\"peel\",$sc) if !ref $sc;\n    $C->{sc} = $sc if $sc;\n    if (ref $y eq 'HASH') {\n        if ($y->{y}) {\n            $C->{c}->{e} = $y;\n            $C->{c}->{W} ||= $C->{t};\n        }\n        else {\n            $C->{y} = $y;\n        }\n    }\n    if (!ref $y) {\n        $C->{c}->{pi} = $1 if $y =~ s/^-(\\w+)//;\n        $y = 1 if $y eq '';\n        $C->{y}->{cv} = $y;\n    }\n    $C->{y}->{cv} /= 10 until $C->{y}->{cv} < 1;\n    die \"Extra: \".wdump 3,$s if @e;\n}\n};"
                                  sc: 
                                    acgt: s
                                    args: A,C,G,T,s
                                    dige: 214e9d8a10e6
                                    of: i
                                  t: Cs
                                  "y": 
                                    cv: '0.1'
                                    next: &6 
                                      c: 
                                        code: !!perl/code: '{ "DUMMY" }'
                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $C = {};\n$G->{h}->($A,$C,$G,$T,\"Cs\",$s);\n$C;\n};"
                                      sc: 
                                        acgt: s
                                        args: A,C,G,T,s
                                        dige: 5111ac0bea33
                                        of: i
                                      t: Ct
                                      "y": 
                                        cv: '0.1'
                                        next: &42 
                                          c: 
                                            code: !!perl/code: '{ "DUMMY" }'
                                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$G = {%{$G||{}}, i=>{%{$A->{i}||{}}}, t=>$G->{t}||'nobody'};\n$G->{h} = $G->{i}->{h};\n$G\n};"
                                          sc: 
                                            acgt: s
                                            args: A,C,G,T,s
                                            dige: efda14f6d8f4
                                            of: i
                                          t: G
                                          "y": 
                                            cv: '0.1'
                                            next: &7 
                                              c: 
                                                code: !!perl/code: '{ "DUMMY" }'
                                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $from = $A->{2};\nif (ref $s) {\n    $from = $s;\n    $s = shift @Me;\n}\nmy $J = do {\n    my $A = $from;\n    $G->{h}->($A,$C,$G,$T,\"A\",'J');\n};\n$J->{t} = $s;\n$J->{y}->{G} = $G;\n# will be bab to G&\n$J->{u} = sub { ($A,$C,$G,$T,@Me) = @_; pop @Me; $G->{h}->($A,$C,$G,$T,\"A\",u=>8=>$J,\\@Me) };\n$J->{n} = sub { ($A,$C,$G,$T,@Me) = @_; pop @Me; $G->{h}->($A,$C,$G,$T,\"A\",n=>8=>$J,\\@Me) };\n$J\n};"
                                              sc: 
                                                acgt: s
                                                args: A,C,G,T,s
                                                dige: a4510acfd835
                                                of: i
                                              t: J
                                              "y": 
                                                cv: '0.1'
                                                next: &8 
                                                  c: 
                                                    code: !!perl/code: '{ "DUMMY" }'
                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$G->{h}->($A,$C,$G,$T,'say','sayre',\"!\\n! not $A->{t} \".ki($C).\"\\n!\");\n$A->{cv} = 0.9;\n};"
                                                  sc: 
                                                    acgt: s
                                                    args: A,C,G,T,s
                                                    dige: f2591f121bae
                                                    of: i
                                                  t: Tnot
                                                  "y": 
                                                    cv: '0.1'
                                                    next: &41 
                                                      c: 
                                                        code: !!perl/code: '{ "DUMMY" }'
                                                        s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($D,@Me) = @M;\ndie \"$A->{t} 's $D->{y}->{cv}~$D->{t} TZ moved $C->{y}->{cv}~$C->{t} \".wdump 3, $T->{Z};\n};"
                                                      sc: 
                                                        acgt: D
                                                        args: A,C,G,T,D
                                                        dige: 6e7dc699846a
                                                        of: i
                                                      t: Tz
                                                      "y": 
                                                        cv: '0.1'
                                                        next: &9 
                                                          c: 
                                                            code: !!perl/code: '{ "DUMMY" }'
                                                            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($k,$c,$d,@Me) = @M;\n$d ||= $c->{y}->{\"$k\"};\nmy $o = $d->{y}->{\"$k\"};\ndelete $c->{y}->{\"$k\"};\nif ($o) {\n    if ($c eq $o) { # mutual\n        delete $d->{y}->{\"$k\"};\n    }\n    else {\n        $c->{y}->{\"$k\"} = $o;\n    }\n}\nmy $ok = {qw{next prev prev next}}->{$k};\nif ($ok) {\n    delete $d->{y}->{\"$k\"};\n    if ($o) {\n        delete $d->{y}->{\"$ok\"};\n        $o->{y}->{\"$ok\"} = $c;\n    }\n}\n};"
                                                          sc: 
                                                            acgt: k c d
                                                            args: A,C,G,T,k,c,d
                                                            dige: d57258884b3c
                                                            of: i
                                                          t: apart
                                                          "y": 
                                                            cv: '0.1'
                                                            next: &10 
                                                              c: 
                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($D,@Me) = @M;\n$G->{h}->($A,$C,$G,$T,\"inDin\",$C,@M);\n};"
                                                              sc: 
                                                                acgt: D
                                                                args: A,C,G,T,D
                                                                dige: 3007ad9a547d
                                                                of: i
                                                              t: c
                                                              "y": 
                                                                cv: '0.1'
                                                                next: &11 
                                                                  c: 
                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                    s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($D,@Me) = @M;\nmy $e = $G->{h}->($A,$C,$G,$T,\"sces\",$C->{c}->{e}||return());\n$G->{h}->($A,$C,$G,$T,\"inDin\",$e,@M);\n};"
                                                                  sc: 
                                                                    acgt: D
                                                                    args: A,C,G,T,D
                                                                    dige: fd6e80dea7d7
                                                                    of: i
                                                                  t: e
                                                                  "y": 
                                                                    cv: '0.1'
                                                                    next: &12 
                                                                      c: 
                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $o = $A->{c}->{tug}->{$s->{c}->{sip}};\n$A->{c}->{tug}->{$s->{c}->{sip}} = $s;\ndelete $A->{c}->{tog} if $o ne $s;\n$s\n};"
                                                                      sc: 
                                                                        acgt: s
                                                                        args: A,C,G,T,s
                                                                        dige: 4c91c40af24c
                                                                        of: i
                                                                      t: entug
                                                                      "y": 
                                                                        cv: '0.1'
                                                                        next: &13 
                                                                          c: 
                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $y;\nmy $D = $T->{D} if $T->{D};\nif (ref $s eq 'CODE') {\n    $y = $s;\n}\nelsif (!ref $s && $A->{i} && $A->{i}->{\"$s\"}) {\n    $y = $A->{i}->{\"$s\"};\n}\nelse {\n    my $C = $G->{h}->($A,$C,$G,$T,\"s\",$s);\n    $C->{c}->{on} = 'i';\n    $y = $G->{i}->{t}->($A,$C,$G,$T,$C);\n};\n$y || die \"no h: $s\";\nmy @r = eval { $y->($A,$C,$G,$T,@Me) };\nif ($@) {\n    if ($@ !~ /Throh/) {\n        $D ||= $A->{i}->{ii}->{i}->{y}->{tw}->{$s};\n        $A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',$D->{c}->{s});\n    }\n    die \"Throh $D->{y}->{cv} $D->{t}: \".ind('  ',$@).\"\\n\";\n}\nwantarray ? @r : $r[0];\n# see 64 Ngwe\n};"
                                                                          sc: 
                                                                            acgt: s
                                                                            args: A,C,G,T,s
                                                                            dige: 04cdeab51635
                                                                            of: i
                                                                          t: h
                                                                          "y": 
                                                                            cv: '0.1'
                                                                            next: &40 
                                                                              c: 
                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $CC = {%$s};\n$CC->{$_} = {%{$CC->{$_}}} for\n    grep {ref $CC->{$_} eq 'HASH'} keys %$CC;\nreturn $CC;\n};"
                                                                              sc: 
                                                                                acgt: s
                                                                                args: A,C,G,T,s
                                                                                dige: 06a9efab1281
                                                                                of: i
                                                                              t: hup
                                                                              "y": 
                                                                                cv: '0.1'
                                                                                next: &14 
                                                                                  c: 
                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                    s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$D,@Me) = @M;\nreturn () unless defined $s;\nreturn $s if $D eq 'C';\n#\nshift @M; # s\n$D = $G->{h}->($A,$C,$G,$T,\"interpD\",@M) if !ref $D;\n#\nmy $v = $G->{h}->($A,$C,$G,$T,\"Cngk\",$s,$D);\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"Got cnkgk: \".wdump 3,[\\@M,$D,$v,$s]) if $A->{VV}->{D};\ndie \"Unhandles any: $v: \".ki $D if $v eq '1';\n#\nreturn () unless $v;\n# blankgk\n$A->{note}->{$D->{c}->{nk}}->{$D->{c}->{gk}} = $v if $A->{note};\n#\n@$v == 1 || die \"Many somehowed \".wdump 3,[ki($D),$v];\n($v) = @$v;\nif ($D->{c}->{as} eq 'list') {\n    ref $v eq 'ARRAY' || die 'Cngk for list not array '.ki $D;\n    return @$v;\n}\nreturn $v;\n};"
                                                                                  sc: 
                                                                                    acgt: s D
                                                                                    args: A,C,G,T,s,D
                                                                                    dige: e104dc4b7bd2
                                                                                    of: i
                                                                                  t: inDin
                                                                                  "y": 
                                                                                    cv: '0.1'
                                                                                    next: &15 
                                                                                      c: 
                                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                                        s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($nk,$gk,@Me) = @M;\nmy $defnk = 'c';\nreturn $nk if ref $nk;\nmy $D = {};\n$D->{c}->{as} = 'list' if $nk =~ s/^_//;\nwhile ($gk =~ s/^%(.+?):(.+?)(?=%|$)//g) {\n    $D->{c}->{$1} = $2;\n    pop @M if @M == 2;\n}\nif (@M == 1 && $nk eq 't') {\n    $D->{c}->{nk} = $nk;\n}\nelsif (@M == 1) { # or from t,,,\n    $D->{c}->{nk} ||= $defnk;\n    $D->{c}->{gk} ||= $nk;\n}\nelsif (@M == 2) {\n    $D->{c}->{nk} = $nk;\n    $D->{c}->{gk} = $gk;\n}\ndelete $D->{c}->{gk} if $D->{c}->{gk} eq 'NOGK';\n$D\n};"
                                                                                      sc: 
                                                                                        acgt: nk gk
                                                                                        args: A,C,G,T,nk,gk
                                                                                        dige: e7d5c0aa062c
                                                                                        of: i
                                                                                      t: interpD
                                                                                      "y": 
                                                                                        cv: '0.1'
                                                                                        next: &16 
                                                                                          c: 
                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$c,@Me) = @M;\nmy $z;\n$s = $G->{h}->($A,$C,$G,$T,\"peel\",$$s) if ref $s eq 'SCALAR';\nmy $n;\nif (ref $s eq 'REF') {\n    # do $s->{do}\n    $s = $$s;\n    $n = $s;\n    $s->{ip} || die \"sip no ref\";\n    $s = {map{$_=> \\$s->{ip}->{\"$_\"} }keys %{$s->{ip}}};\n}\n# $n->{all} keeps going after a pass--\nmy $pass = 1;\nEE: for my $k (keys %$s) {\n    $pass == 1 || $n->{all} || return 0;\n    my $y = $s->{\"$k\"};\n    my $x = $c->{\"$k\"};\n    if (ref $y eq 'REF') {\n        $y = $$y;\n        if (exists $y->{nk}) {\n            $x = $c;\n            for my $k (grep{defined}$y->{nk},$y->{gk},$y->{tk}) {\n                $pass--, next EE unless\n                    ref $x eq 'HASH' && exists $x->{\"$k\"};\n                $x = $x->{\"$k\"};\n            }\n        }\n        my $wa = $pass;\n        !defined $x || $pass-- if $y->{ndef};\n        defined $x || $pass-- if $y->{def};\n        $y->{is} eq $x || $pass-- if exists $y->{is};\n        $y->{not} ne $x || $pass-- if exists $y->{not};\n        $y->{in}->{$x} || $pass-- if $y->{in};\n        !$y->{nin}->{$x} || $pass-- if $y->{nin};\n        $x > $y->{gt} || $pass-- if exists $y->{gt};\n        $x < $y->{lt} || $pass-- if exists $y->{lt};\n        $x >= $y->{gteq} || $pass-- if exists $y->{gteq};\n        $x <= $y->{lteq} || $pass-- if exists $y->{lteq};\n        $x =~ $y->{re} || $pass-- if exists $y->{re};\n        $pass = $pass < $wa ? $wa : $pass-1\n            if $y->{neg};\n    }\n    elsif ($y ne $c->{\"$k\"}) {\n        $pass--;\n    }\n}\n$pass == 1\n};"
                                                                                          sc: 
                                                                                            acgt: s c
                                                                                            args: A,C,G,T,s,c
                                                                                            dige: 92f3abf0f6db
                                                                                            of: i
                                                                                          t: ip
                                                                                          "y": 
                                                                                            cv: '0.1'
                                                                                            next: &39 
                                                                                              c: 
                                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                                s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($r,$j,@Me) = @M;\nmy $ik = $j.'C';\nmy $ok = $j.'o';\nmy $tw;\nmy $oi;$oi = sub {\n    my ($C) = @_;\n    die \"loop $C->{t}\" if $tw->{$C}++;\n    my $jon;\n    if (my $D = $C->{c}->{\"$ik\"}) {\n        # tune in parents first\n        $jon = $D->{c}->{\"$j\"} ||= $oi->($D);\n    }\n    else {\n        # origin\n        $jon = $C->{c}->{\"$r\"};\n    }\n    my $i = $jon->{sc}->{\"$ok\"} ||= {};\n    for my $nk (@Me) {\n        ($nk,my $gk) = ($1,$nk) if $nk =~ s/^(y|c|sc)//;\n        my $v = $C->{$nk};\n        $v = $v->{$gk} if $gk;\n        $i = $i->{$v} ||= {};\n    }\n    $C->{c}->{\"$j\"} = $i;\n};\n$oi->($C);\n};"
                                                                                              sc: 
                                                                                                acgt: r j
                                                                                                args: A,C,G,T,r,j
                                                                                                dige: c06dbf616aa1
                                                                                                of: i
                                                                                              t: offis
                                                                                              "y": 
                                                                                                cv: '0.1'
                                                                                                next: &17 
                                                                                                  c: 
                                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nreturn $s if ref $s;\n$s =~ s/^%//;\nmy $c = {};\nfor (split ',', $s) {\n    my ($k, $v) = split ':', $_, 2;\n    $v = 1 if !defined $v;\n    $c->{$k} = $v;\n}\n$c\n};"
                                                                                                  sc: 
                                                                                                    acgt: s
                                                                                                    args: A,C,G,T,s
                                                                                                    dige: fb78bccf58a9
                                                                                                    of: i
                                                                                                  t: peel
                                                                                                  "y": 
                                                                                                    cv: '0.1'
                                                                                                    next: &38 
                                                                                                      c: 
                                                                                                        code: !!perl/regexp (?^:^[\{\%]\w+)
                                                                                                        s: "(sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nqr/^[\\{\\%]\\w+/;\n})->($A,$C,$G,$T);"
                                                                                                      sc: 
                                                                                                        acgt: s
                                                                                                        args: A,C,G,T,s
                                                                                                        dige: 7e0e108b8eee
                                                                                                        of: i
                                                                                                        subpeel: 1
                                                                                                      t: peels
                                                                                                      "y": 
                                                                                                        cv: '0.1'
                                                                                                        next: &18 
                                                                                                          c: 
                                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nfor (@Me) {\n    return unless ref $s eq 'HASH' && exists $s->{\"$_\"};\n    $s = $s->{\"$_\"};\n}\n};"
                                                                                                          sc: 
                                                                                                            acgt: s
                                                                                                            args: A,C,G,T,s
                                                                                                            dige: 98c8043b2a41
                                                                                                            of: i
                                                                                                          t: pint
                                                                                                          "y": 
                                                                                                            cv: '0.1'
                                                                                                            next: &19 
                                                                                                              c: 
                                                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                                                s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($J,@Me) = @M;\nmy $n = $J->{sc}->{n} || die 'no n';\nmy $zi = ++$J->{c}->{zi};\nmy $ch = '';\nmy $lim = 2;\nwhile ($n->{sc}->{a}->{$ch}) {\n    $J->{sc}->{Z}->{$zi}->{$ch} = delete $n->{sc}->{a}->{$ch};\n    if ($zi > $lim) {\n        delete $J->{sc}->{Z}->{$zi-$lim}\n    }\n    $ch++;\n}\ndelete $J->{c}->{o};\n};"
                                                                                                              sc: 
                                                                                                                acgt: J
                                                                                                                args: A,C,G,T,J
                                                                                                                dige: 704a7b3938db
                                                                                                                of: i
                                                                                                              t: rea
                                                                                                              "y": 
                                                                                                                cv: '0.1'
                                                                                                                next: &37 
                                                                                                                  c: 
                                                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nif (ref $s eq 'HASH' && ref $s->{y} && $s->{y} ne $s) {\n    return $s\n}\n$C = {};\n$C->{t} = '';\n$C->{y} = {};\n$C->{c}->{s} = $s;\n$C;\n};"
                                                                                                                  sc: 
                                                                                                                    acgt: s
                                                                                                                    args: A,C,G,T,s
                                                                                                                    dige: e1d4a5577ce5
                                                                                                                    of: i
                                                                                                                  t: s
                                                                                                                  "y": 
                                                                                                                    cv: '0.1'
                                                                                                                    next: &20 
                                                                                                                      c: 
                                                                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                                                                        s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($J,$t,@Me) = @M;\n$J->{sc}->{\"$t\"} ||= $G->{h}->($A,$C,$G,$T,\"J\",$J,$t);\n};"
                                                                                                                      sc: 
                                                                                                                        acgt: J t
                                                                                                                        args: A,C,G,T,J,t
                                                                                                                        dige: d62f6a18c810
                                                                                                                        of: i
                                                                                                                      t: sJ
                                                                                                                      "y": 
                                                                                                                        cv: '0.1'
                                                                                                                        next: &21 
                                                                                                                          c: 
                                                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                                                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$s eq 'saygr' ? saygr(@Me) :\n$s eq 'sayyl' ? sayyl(@Me) :\n$s eq 'saybl' ? saybl(@Me) :\n$s eq 'sayre' ? sayre(@Me) :\n$s eq 'say' ? say(@Me) :\ndie \"New kinda talk: $s\\n\".wdump 2, \\@Me;\n};"
                                                                                                                          sc: 
                                                                                                                            acgt: s
                                                                                                                            args: A,C,G,T,s
                                                                                                                            dige: 8de5fc158136
                                                                                                                            nobasay: 1
                                                                                                                            of: i
                                                                                                                          t: say
                                                                                                                          "y": 
                                                                                                                            cv: '0.1'
                                                                                                                            next: &22 
                                                                                                                              c: 
                                                                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$s /= 10 while $s > 1 || $s < -1;\nreturn $s\n};"
                                                                                                                              sc: 
                                                                                                                                acgt: s
                                                                                                                                args: A,C,G,T,s
                                                                                                                                dige: ce8c0304c9ad
                                                                                                                                of: i
                                                                                                                              t: sca
                                                                                                                              "y": 
                                                                                                                                cv: '0.1'
                                                                                                                                next: &23 
                                                                                                                                  c: 
                                                                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $i = 0;\nwhile ($s->{c}->{e}) {\n    $s = $s->{c}->{e};\n    $i++ > 9 && die \"HUGE $i recursing CceCceCceCce... by \".ki $s;\n}\nreturn $s;\n};"
                                                                                                                                  sc: 
                                                                                                                                    acgt: s
                                                                                                                                    args: A,C,G,T,s
                                                                                                                                    dige: ba5a5dcef12e
                                                                                                                                    of: i
                                                                                                                                  t: sces
                                                                                                                                  "y": 
                                                                                                                                    cv: '0.1'
                                                                                                                                    next: &24 
                                                                                                                                      c: 
                                                                                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmap { my$i;\n    $C->{y}->{$_} /= 10 while\n    ($C->{y}->{$_} <= -1 || $C->{y}->{$_} >= 1)\n    &&\n    (++$i < 10 || die \"Many i chewing on $_: \".ki $C->{y})\n}\ngrep { $C->{y}->{$_} }\nqw'in out cv'\n};"
                                                                                                                                      sc: 
                                                                                                                                        acgt: s
                                                                                                                                        args: A,C,G,T,s
                                                                                                                                        dige: 85c6709f2bbd
                                                                                                                                        of: i
                                                                                                                                      t: scyvle
                                                                                                                                      "y": 
                                                                                                                                        cv: '0.1'
                                                                                                                                        next: &25 
                                                                                                                                          c: 
                                                                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($J,@Me) = @M;\nmy $o = $J->{sc}->{S}->{$J->{sc}->{ch}} = $G->{h}->($A,$C,$G,$T,\"sJ\",$J,'s');\ndelete $J->{sc}->{s};\nmy $ch = ++$J->{sc}->{ch};\nmy $s = $J->{sc}->{s} = $J->{sc}->{S}->{$ch} ||= $G->{h}->($A,$C,$G,$T,\"sJ\",$J,'s');\n$o->{sc}->{next} = $s;\n$s->{sc}->{prev} = $o;\n# makes osc $thing->{3} etc hang around\n$s->{sc}->{ch} = $ch;\n};"
                                                                                                                                          sc: 
                                                                                                                                            acgt: J
                                                                                                                                            args: A,C,G,T,J
                                                                                                                                            dige: c525c114325b
                                                                                                                                            of: i
                                                                                                                                          t: sesh
                                                                                                                                          "y": 
                                                                                                                                            cv: '0.1'
                                                                                                                                            next: &26 
                                                                                                                                              c: 
                                                                                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $so;$so = sub {\n    my ($i,@try) = @_;\n    my ($yk) = @try;\n    my ($c,$d) = ($a->{y}->{$yk},$b->{y}->{$yk});\n    $c && $d || die \"sort no y$yk\".wdump 4,[$a,$b];\n    ($c,$d) = ($c->{c}->{ip},$d->{c}->{ip});\n    $c && $d || die \"sort noy$yk ip\";\n    unless (exists $c->[$i] || exists $d->[$i]) {\n        shift @try;\n        return $so->(0,@try) if @try;\n        die \"ip sort ran out:\\n  \".ki($a).\"\\n  \".ki($b);\n    }\n    $c->[$i] <=> $d->[$i]\n    || $so->($i+1,@try);\n};\nsort {$so->(0,@Me)} @$s;\n};"
                                                                                                                                              sc: 
                                                                                                                                                acgt: s
                                                                                                                                                args: A,C,G,T,s
                                                                                                                                                dige: 0bdb890efecd
                                                                                                                                                of: i
                                                                                                                                              t: sortysip
                                                                                                                                              "y": 
                                                                                                                                                cv: '0.1'
                                                                                                                                                next: &36 
                                                                                                                                                  c: 
                                                                                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$C = $G->{h}->($A,$C,$G,$T,\"s\",$s);\n$C->{c}->{on} ||= 'ii';\n$C->{c}->{max} ||= 5;\nfor (1..$C->{c}->{max}) {\n    return $A->{$_}->{$C->{c}->{on}}->{$C->{c}->{s}}\n        if $A->{$_}\n        && $A->{$_}->{$C->{c}->{on}} \n        && $A->{$_}->{$C->{c}->{on}}->{$C->{c}->{s}}\n}\n};"
                                                                                                                                                  sc: 
                                                                                                                                                    acgt: s
                                                                                                                                                    args: A,C,G,T,s
                                                                                                                                                    dige: 437762f4bf91
                                                                                                                                                    of: i
                                                                                                                                                  t: t
                                                                                                                                                  "y": 
                                                                                                                                                    cv: '0.1'
                                                                                                                                                    next: &35 
                                                                                                                                                      c: 
                                                                                                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nreturn if $T->{not};\n$s ||= $A->{c}->{of} || $A->{t};\nmy $of = $G->{h}->($A,$C,$G,$T,\"s\",$s);\n$of->{c}->{max} = 2; # distance from A to look\nmy $z = $G->{h}->($A,$C,$G,$T,\"t\",$of) || return;\n#snooze 500;\nmy $uov = $A->{c}->{ov};\nmy $ntug = 0.1;\nwhile ($z) {\n    next if $z->{c}->{W};\n    next if $z->{y}->{cv} <= $A->{y}->{cv};\n    last if $uov && $z->{y}->{cv} > $uov;\n    my $etug = $ntug;\n    if ($A->{c}->{tug} && $ntug <= $z->{y}->{cv}) {\n        $ntug += 0.1 until $ntug >= $z->{y}->{cv};\n        $G->{h}->($A,$C,$G,$T,\"tug\",$ntug);\n    }\n    $C = $A->{c}->{s} ||= {y=>{A=>$A}};\n    $T = $A->{c}->{T} ||= {};\n    my @is = ($A->{c}->{N} || $z);\n\n    # z wants C\n    if ($z->{sc}->{nk}) {\n        exists $C->{$z->{sc}->{nk}} || next;\n        @is = $C->{$z->{sc}->{nk}};\n        if ($z->{sc}->{gk}) {\n            exists $C->{$z->{sc}->{nk}}->{$z->{sc}->{gk}} || next;\n            @is = $C->{$z->{sc}->{nk}}->{$z->{sc}->{gk}};\n        }\n    }\n    if ($z->{sc}->{sk}) {\n        exists $C->{sc}->{$z->{sc}->{sk}} || next;\n        @is = $C->{sc}->{$z->{sc}->{sk}};\n    }\n    if ($z->{sc}->{t}) {\n        my $sc = $z->{sc};\n        ref $sc->{ip} eq 'HASH' || die \"Dsct ip not: \".ki$z;\n        $G->{h}->($A,$C,$G,$T,\"ip\",\\$sc,$C) || next;\n    }\n    if ($z->{sc}->{Ifs}) {\n        die \"A impli\";\n        @is = $G->{h}->($A,$C,$G,$T,\"scIfs\",$z->{sc}->{Ifs});\n    }\n\n    # z readies\n    if ($z->{sc}->{acgt} && !$z->{c}->{code}) {\n        my $y = eval $z->{c}->{s};\n        die \"Throcompile $of->{t} $z->{y}->{cv}: $z->{t}: \".ind('  ',$@).\"\\n\" if $@;\n        $z->{c}->{code} = $y;\n    }\n\n    $A->{V} && $G->{h}->($A,$C,$G,$T,'say','say',\"$A->{c}->{sip} \\t Onto $A->{t} ~ $C->{t} ~ $z->{t} $z->{y}->{cv}\");\n    # happens\n    for my $s (@is) {\n        $z->{sc}->{acgt} eq 's' || die \"nonacgts\".wdump $z;\n        $T->{D} = $z;\n        my $y = $z->{c}->{code};\n        ref $y || die \"Compile $z->{y} $z->{y}->{cv}!\";\n\n        $G->{i}->{h}->($A,$C,$G,$T,$y,$s);\n\n        $T->{ut} && $G->{h}->($A,$C,$G,$T,\"Tut\",$s);\n        $T->{Z} && $G->{h}->($A,$C,$G,$T,\"Tz\",$z);\n        last if $T->{not} || $T->{whack};\n    }\n    # back\n    delete $T->{ut};\n\n    $A->{y}->{cv} = $z->{y}->{cv};\n    last if delete $T->{whack} || $T->{not};\n}\ncontinue {\n    $z = $z->{y}->{in} || $z->{y}->{next}; # or timeout, mass comb via $A->{m}\n}\n# leaving\n$A->{c}->{tug} && $G->{h}->($A,$C,$G,$T,\"tug\",$A->{y}->{cv});\ndelete $A->{c}->{ov};\n$T->{not} && $G->{h}->($A,$C,$G,$T,\"Tnot\");\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"$A->{c}->{sip} \\t<--  $A->{t} $A->{cv}\");\n# TODO cycle all $A->{c}->{N} as C\n# TODO line with Targety interrupt potential\n# see 1 KnowTime/Cone\n};"
                                                                                                                                                      sc: 
                                                                                                                                                        acgt: s
                                                                                                                                                        args: A,C,G,T,s
                                                                                                                                                        dige: c407b047b26f
                                                                                                                                                        of: i
                                                                                                                                                      t: throat
                                                                                                                                                      "y": 
                                                                                                                                                        cv: '0.1'
                                                                                                                                                        next: &27 
                                                                                                                                                          c: 
                                                                                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$G->{h}->($A,$C,$G,$T,\"together\",$s,@Me)\n};"
                                                                                                                                                          sc: 
                                                                                                                                                            acgt: s
                                                                                                                                                            args: A,C,G,T,s
                                                                                                                                                            dige: 53017a32f7c1
                                                                                                                                                            of: i
                                                                                                                                                          t: toget
                                                                                                                                                          "y": 
                                                                                                                                                            cv: '0.1'
                                                                                                                                                            next: &34 
                                                                                                                                                              c: 
                                                                                                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($k,$c,$d,@Me) = @M;\nmy $o = $c->{y}->{\"$k\"};\n$c->{y}->{\"$k\"} = $d;\nmy $ok = {qw{next prev prev next}}->{$k};\nif ($ok) {\n    $d->{y}->{\"$ok\"} = $c;\n    if ($o) {\n        $d->{y}->{\"$k\"} = $o;\n        $o->{y}->{\"$ok\"} = $d;\n    }\n}\n};"
                                                                                                                                                              sc: 
                                                                                                                                                                acgt: k c d
                                                                                                                                                                args: A,C,G,T,k,c,d
                                                                                                                                                                dige: 12027d14e15a
                                                                                                                                                                of: i
                                                                                                                                                              t: together
                                                                                                                                                              "y": 
                                                                                                                                                                cv: '0.1'
                                                                                                                                                                next: &33 
                                                                                                                                                                  c: 
                                                                                                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $og = $A->{c}->{tog} ||= [sort keys %{$A->{c}->{tug}}];\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"$A->{c}->{sip} $A->{t} tugs $s -> \".@$og);\nfor (@$og) {\n    my $mo = $A->{c}->{tug}->{$_};\n    next if $mo->{y}->{cv} >= $s;\n    my $A = $mo;\n    $A->{c}->{ov} = $s;\n    $G->{h}->($A,$C,$G,$T,\"throat\")\n}\n};"
                                                                                                                                                                  sc: 
                                                                                                                                                                    acgt: s
                                                                                                                                                                    args: A,C,G,T,s
                                                                                                                                                                    dige: efaab29c5c31
                                                                                                                                                                    of: i
                                                                                                                                                                  t: tug
                                                                                                                                                                  "y": 
                                                                                                                                                                    cv: '0.1'
                                                                                                                                                                    next: &32 
                                                                                                                                                                      c: 
                                                                                                                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$s = $G->{h}->($A,$C,$G,$T,\"A\",$s,@Me);\n$G->{h}->($A,$C,$G,$T,\"entug\",$s);\n$s\n};"
                                                                                                                                                                      sc: 
                                                                                                                                                                        acgt: s
                                                                                                                                                                        args: A,C,G,T,s
                                                                                                                                                                        dige: c0dec2e8bd34
                                                                                                                                                                        of: i
                                                                                                                                                                      t: tugA
                                                                                                                                                                      "y": 
                                                                                                                                                                        cv: '0.1'
                                                                                                                                                                        next: &31 
                                                                                                                                                                          c: 
                                                                                                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($D,@Me) = @M;\nmy $e = $G->{h}->($A,$C,$G,$T,\"sces\",$C->{c}->{e}||return());\nmy $us = $e->{c}->{us}||return();\npush @M, 'NOGK' if @M == 1;\n$G->{h}->($A,$C,$G,$T,\"inDin\",$us,@M);\n};"
                                                                                                                                                                          sc: 
                                                                                                                                                                            acgt: D
                                                                                                                                                                            args: A,C,G,T,D
                                                                                                                                                                            dige: 9531430ea2bd
                                                                                                                                                                            of: i
                                                                                                                                                                          t: us
                                                                                                                                                                          "y": 
                                                                                                                                                                            cv: '0.1'
                                                                                                                                                                            next: &28 
                                                                                                                                                                              c: 
                                                                                                                                                                                code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $wast = $C->{t};\n$C->{t} =~ s/\\W//sg;\nmy $ind = \"\";\n$C->{sc}->{of} ||= $C->{sc}->{code};\n\nif ($C->{sc}->{acgt}) {\n    # for ACGT+args in acgt, args take whole @_\n    $C->{sc}->{args} ||= join',','A,C,G,T',grep{$_ ne '1'}$C->{sc}->{acgt};\n    $C->{sc}->{of} eq '1' && undef $C->{sc}->{of};\n    # the I that Cs all, it is indifferent to its current\n    $C->{sc}->{of} ||= \"I\";\n}\n$C->{sc}->{args} =~ s/[\\+ ]/,/sgm;\n$C->{sc}->{got} && die \":Slooping\";\n\n    if ($C->{sc}->{code} =~ /\\w+ \\w+/) { # LEG\n        $C->{sc}->{code} =~ /^(\\w+) (\\d+)$/ || die \"wtfs code=$C->{sc}->{code}  \".ki$C;\n        my ($K,$cv) = ($1,$2);\n        $C->{sc}->{of} = $K;\n        $cv = 0+(\"0.\".$cv);\n        $A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"CHangting $K / $cv / $C->{t}   from $C->{y}->{cv}\")\n            if $cv ne $C->{y}->{cv} && $C->{y}->{cv} != 0.3;\n        $C->{y}->{cv} = $cv;\n    }\n    $C->{sc}->{code} = $C->{sc}->{of}; # pickyness\n    if ($ar->{noAI}) {\n        delete $C->{sc}->{code};\n        $C->{sc}->{of} = 'i' if $C->{sc}->{of} eq 'I';\n\n    }\n\n        my $ara = []; # ar ups and demand argsed\n\n        exists $C->{sc}->{t} &&\n        $G->{w}->($A,$C,$G,$T,\"conot\",C=>$C);\n\n        if ($C->{sc}->{Td}) { # onc populates\n            my $Q;\n            $Q->{path} = [split '/', $C->{sc}->{Td}];\n            die if @{$Q->{path}} < 1;\n\n            my $form = $C->{sc}->{Tdform} || 'nk/gk/wk';\n            $Q->{atar} = [split '/', $form];\n            @{$Q->{atar}} = @{$Q->{atar}}[0 .. (@{$Q->{path}}-1)];\n\n            $Q->{onpa} = [split '/', 'T/d'];\n            $Q->{caps} = {map{$_=>1}split',',$C->{sc}->{Tdarge}} if $C->{sc}->{Tdarge};\n            # like rg but from $s\n            $C->{sc}->{sr} && die \"already sr\";\n            $C->{sc}->{sr} = join ',', grep{$_} d=>o=>v=>talk=> @{$Q->{atar}}, sort keys %{$Q->{caps}||{}};\n            for my $sr (split ',', $C->{sc}->{sr}) {\n                die \"mixo $sr\" if $sr =~ /\\W/;\n                push @$ara, \"my \\$\".$sr.\" = s\\.$sr;\";\n            }\n            $C->{sc}->{Ifs}->{Td} = $Q;\n        }\n\n        if ($C->{sc}->{v} && $C->{sc}->{v} ne '1') {\n            my $v = $C->{sc}->{v};\n            my ($nk,$gk) = $v =~ /^([tyc]|sc)(.*)$/;\n            $nk||die\"strv:$v\";\n            $C->{sc}->{nk} ||= $nk;\n            $C->{sc}->{rg} ||= 1 if $C->{sc}->{nk} ne $nk;\n            push @$ara, $ind.\"my \\$\".$nk.\" = C\\.\".$nk.\";\";\n            if ($gk) {\n                $C->{sc}->{gk} ||= $gk;\n                my $gkk = $gk;\n                $gk = $C->{sc}->{gkis} if $C->{sc}->{gkis};\n                my $my = \"my \" unless $C->{sc}->{args} =~ /\\bs\\b/ && $nk eq 'c' && $gkk eq 's';\n                push @$ara, \"$my\\$\".$gk.\" = C\\.\".$nk.\"\\.\".$gkk.\";\";\n            }\n        }\n\n        $C->{sc}->{rg} = $C->{sc}->{cg} if $C->{sc}->{cg};\n        if (my $v = $C->{sc}->{rg}) {\n            $v = '' if $v eq '1';\n            my ($nk) = $C->{sc}->{v} =~ /^([tyc]|sc)(.*)$/;\n            $nk ||= $C->{sc}->{nk} || 'c';\n            $nk = 'c' if $C->{sc}->{cg};\n            my @no = map {\n                my ($wnk,$wgk);\n                ($wnk,$wgk) = ($1,$2) if /^([tyc]|sc)(.*)$/;\n                $wnk ||= $nk;\n                $wgk ||= $_;\n                [$wnk,$wgk]\n            } split /,/, $v;\n            push @no, [$C->{sc}->{nk},$C->{sc}->{gk}] if $C->{sc}->{nk} && $nk ne $C->{sc}->{nk};\n            for my $s (@no) {\n                next if $s->[1] eq $C->{sc}->{gk};\n                push @$ara, \"my \\$\".$s->[1].\" = C\\.\".$s->[0].\"\\.\".$s->[1].\";\";\n            }\n        }\n\n        if (my $args = $C->{sc}->{args}) {\n            die \"wonky $C->{t}   of \".ki $C if $C->{t} =~ /\\W/;\n            my $gl = \"\";\n            my $und = \"_\";\n            if ($args =~ s/^(A,C,G,T,)(?!s$)//) {\n                $gl .= $ind.'my ($A,$C,$G,$T,@M)=@_;'.\"\\n\";\n                $und = 'M';\n            }\n            my($sf,$sa);\n            if ($C->{sc}->{subpeel}) { # runs, returns $T->{thing}\n                $sf = \"(\";\n                $sa = ')->($A,$C,$G,$T)';\n            }\n            # here some want their own I space\n            # if I resolv backward winding pro-be\n            # G pulls in I\n            my $waytoset = \"A\\.I.\".$C->{t}.\" = \" unless $ar->{noAI}  || $C->{sc}->{noAI} || $C->{sc}->{sub};\n            my $sub = \"sub\".($C->{sc}->{sub} ? \" $C->{t} \" : ' ').\"{\\n\";\n            unless ($args eq '1') {\n                unshift @$ara, \"my \\$I = A\\.I;\" unless $ar->{noAI};\n                unshift @$ara, \"my (\".join(',',map{'$'.$_}\n                    split',',$args).',@Me) = @'.$und.\";\";\n            }\n            $C->{c}->{s} = $waytoset\n                .$sf\n                .$sub\n                .$gl\n                .join(\"\",map{\"$ind$_\\n\"} uniq(grep{$_}@$ara), split(\"\\n\", $C->{c}->{s}))\n                .\"}\"\n                .$sa\n                .\";\";\n            $C->{c}->{s} .= \"A\\.I\\.d\".\"&An;\\n\" if $C->{t} eq 'An';\n        }\n        else {\n            $C->{sc}->{subpeel}&&die\"nonargs ha subpeel\".ki$C\n        }\n\nmy $sw = {};\n$sw->{\"$_\"} = 'say' for qw'saygr saybl sayyl sayre say';\n%$sw = () if $C->{sc}->{nobasay};\nfor (keys %$sw) {\n    my $if = $_ ne 'sayre' ? \"A\\.V && \" : \"\";\n    $C->{c}->{s} =~ s/^(\\s*)$_ ([^\\n]+?)((?: (?:for|if) .+)?;?)$/${1}${if}G\\.h->(\\$A,\\$C,\\$G,\\$T,'$sw->{$_}','$_',$2)$3/sgm;\n}\n\n$C->{c}->{s} =~ s/\\bs\\&(\\w+)/C\\&$1/sgm;\n\n$C->{c}->{s} = $G->{h}->($A,$C,$G,$T,\"parse_babbl\",$C->{c}->{s});\n};"
                                                                                                                                                                              sc: 
                                                                                                                                                                                acgt: s
                                                                                                                                                                                args: A,C,G,T,s
                                                                                                                                                                                dige: f82b9cbee515
                                                                                                                                                                                of: i
                                                                                                                                                                              t: won
                                                                                                                                                                              "y": 
                                                                                                                                                                                cv: '0.1'
                                                                                                                                                                                next: &29 
                                                                                                                                                                                  c: 
                                                                                                                                                                                    code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                                    s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$c,@Me) = @M;\nref $c eq 'HASH' && ref $s eq 'HASH'\n    || die \"Hash up\".wdump 3, [$s,$c];\nwhile (my($k,$v) = each %$c) {\n    $s->{$k} = $v;\n}\nreturn $s\n};"
                                                                                                                                                                                  sc: 
                                                                                                                                                                                    acgt: s c
                                                                                                                                                                                    args: A,C,G,T,s,c
                                                                                                                                                                                    dige: e84ad0539dfc
                                                                                                                                                                                    of: i
                                                                                                                                                                                  t: xo
                                                                                                                                                                                  "y": 
                                                                                                                                                                                    cv: '0.1'
                                                                                                                                                                                    next: &30 
                                                                                                                                                                                      c: 
                                                                                                                                                                                        code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                                        s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$c,@Me) = @M;\nref $c eq 'HASH' && ref $s eq 'HASH'\n    || die \"Hash up\".wdump 3, [$s,$c];\nwhile (my($k,$v) = each %$c) {\n    $s->{$k} = ref $v eq 'HASH' ?\n                {%{$s->{$k}||{}}, %$v}\n    : $v;\n}\nreturn $s\n};"
                                                                                                                                                                                      sc: 
                                                                                                                                                                                        acgt: s c
                                                                                                                                                                                        args: A,C,G,T,s,c
                                                                                                                                                                                        dige: ec493c2a1a80
                                                                                                                                                                                        of: i
                                                                                                                                                                                      t: xot
                                                                                                                                                                                      "y": 
                                                                                                                                                                                        cv: '0.1'
                                                                                                                                                                                        next: &45 
                                                                                                                                                                                          c: 
                                                                                                                                                                                            code: !!perl/code: '{ "DUMMY" }'
                                                                                                                                                                                            s: "sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$c,@Me) = @M;\n$c = $G->{h}->($A,$C,$G,$T,\"xot\",{},$c);\n$G->{h}->($A,$C,$G,$T,\"xot\",$c,$s);\nreturn $s;\n};"
                                                                                                                                                                                          sc: 
                                                                                                                                                                                            acgt: s c
                                                                                                                                                                                            args: A,C,G,T,s,c
                                                                                                                                                                                            dige: 72bf06021768
                                                                                                                                                                                            of: i
                                                                                                                                                                                          t: xoy
                                                                                                                                                                                          "y": 
                                                                                                                                                                                            cv: '0.1'
                                                                                                                                                                                            prev: *30
                                                                                                                                                                                        prev: *29
                                                                                                                                                                                    prev: *28
                                                                                                                                                                                prev: *31
                                                                                                                                                                            prev: *32
                                                                                                                                                                        prev: *33
                                                                                                                                                                    prev: *34
                                                                                                                                                                prev: *27
                                                                                                                                                            prev: *35
                                                                                                                                                        prev: *36
                                                                                                                                                    prev: *26
                                                                                                                                                prev: *25
                                                                                                                                            prev: *24
                                                                                                                                        prev: *23
                                                                                                                                    prev: *22
                                                                                                                                prev: *21
                                                                                                                            prev: *20
                                                                                                                        prev: *37
                                                                                                                    prev: *19
                                                                                                                prev: *18
                                                                                                            prev: *38
                                                                                                        prev: *17
                                                                                                    prev: *39
                                                                                                prev: *16
                                                                                            prev: *15
                                                                                        prev: *14
                                                                                    prev: *40
                                                                                prev: *13
                                                                            prev: *12
                                                                        prev: *11
                                                                    prev: *10
                                                                prev: *9
                                                            prev: *41
                                                        prev: *8
                                                    prev: *7
                                                prev: *42
                                            prev: *6
                                        prev: *5
                                    prev: *4
                                prev: *3
                            prev: *2
                        prev: *43
                    prev: *44
                prev: *1
        tw: 
          A: *1
          Chade: *44
          Chang: *43
          Chew: *2
          Chs: *3
          Cngk: *4
          Cs: *5
          Ct: *6
          G: *42
          J: *7
          Tnot: *8
          Tz: *41
          apart: *9
          c: *10
          e: *11
          entug: *12
          h: *13
          hup: *40
          inDin: *14
          interpD: *15
          ip: *16
          offis: *39
          peel: *17
          peels: *38
          pint: *18
          rea: *19
          s: *37
          sJ: *20
          say: *21
          sca: *22
          sces: *23
          scyvle: *24
          sesh: *25
          sortysip: *26
          t: *36
          throat: *35
          toget: *27
          together: *34
          tug: *33
          tugA: *32
          us: *31
          won: *28
          xo: *29
          xot: *30
          xoy: *45
    - 
      c: 
        W: of
      t: mo
      "y": 
        cv: '0.001'
        in: &46 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# sprung from n/author, separate put words...\n$G->{h}->($A,$C,$G,$T,\"Cs\",$s);\n};"
          sc: 
            acgt: s
            act: 1
            args: A,C,G,T,s
            dige: df8b45e59cde
            of: mo
          t: mo
          "y": 
            cv: '0.1'
            next: &56 
              c: 
                code: !!perl/code: '{ "DUMMY" }'
                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $c = $C->{c};\nmy $W = $C->{c}->{W};\nref $s && die;\n$C->{c}->{J} = $s;\n$A->{c}->{Jpool} = $A->{4};\n# dhcp replanty $A->{c}->{ip}\n};"
              sc: 
                acgt: s
                act: 1
                args: A,C,G,T,s
                dige: e5965de40768
                gk: W
                nk: c
                of: mo
                v: cW
              t: W
              "y": 
                cv: '0.12'
                next: &55 
                  c: 
                    code: !!perl/code: '{ "DUMMY" }'
                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $c = $C->{c};\nmy $pi = $C->{c}->{pi};\n$C->{c}->{pin} = \"pi/$pi\";\n};"
                  sc: 
                    acgt: s
                    act: 1
                    args: A,C,G,T,s
                    dige: e8642cf77b68
                    gk: pi
                    nk: c
                    of: mo
                    v: cpi
                  t: pi
                  "y": 
                    cv: '0.12'
                    next: &47 
                      c: 
                        code: !!perl/code: '{ "DUMMY" }'
                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $c = $C->{c};\nmy $J = $C->{c}->{J};\n# see self already\n$C->{sc}->{J} ||= $G->{h}->($A,$C,$G,$T,\"pint\",$A->{2}->{sc}->{tv}=>$C->{t},$C->{y}->{cv});\n# or force a...\n};"
                      sc: 
                        acgt: s
                        act: 1
                        args: A,C,G,T,s
                        dige: 159ed72dc930
                        gk: J
                        nk: c
                        of: mo
                        v: cJ
                      t: J
                      "y": 
                        cv: '0.2'
                        next: &48 
                          c: 
                            code: !!perl/code: '{ "DUMMY" }'
                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $c = $C->{c};\nmy $J = $C->{c}->{J};\nmy $from = $A->{c}->{Jpool} || $A->{2};\n$C->{sc}->{J} ||= $G->{h}->($A,$C,$G,$T,\"J\",$from,$C->{t});\n};"
                          sc: 
                            acgt: s
                            act: 1
                            args: A,C,G,T,s
                            dige: 720630264e2c
                            gk: J
                            nk: c
                            of: mo
                            v: cJ
                          t: J
                          "y": 
                            cv: '0.3'
                            next: &54 
                              c: 
                                code: !!perl/code: '{ "DUMMY" }'
                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $c = $C->{c};\nmy $pi = $C->{c}->{pi};\nmy $J = $C->{sc}->{J};\n$J->{c}->{d} = $A->{2}->{c}->{d} + 1;\n$J->{sc}->{name} = \"$J->{c}->{d} $pi*$C->{t}\";\n# distance from $A->{3} as ip\n};"
                              sc: 
                                acgt: s
                                act: 1
                                args: A,C,G,T,s
                                dige: 4525afe408f3
                                gk: pi
                                nk: c
                                of: mo
                                v: cpi
                              t: pi
                              "y": 
                                cv: '0.3'
                                next: &49 
                                  c: 
                                    code: !!perl/code: '{ "DUMMY" }'
                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sc = $C->{sc};\nmy $J = $C->{sc}->{J};\n# humming - superline timetug - osc exports that door us here\n# outside the fully self/u mind\nmy $v = $J->{sc}->{Tv}; # inner surf attracto\nmy $ha = $J->{sc}->{tv}; # things\n# T wants ha or v wants T (by now, etc)\n# travel comes down ch-switches even if pin skips\n};"
                                  sc: 
                                    acgt: s
                                    act: 1
                                    args: A,C,G,T,s
                                    dige: bf16c2d472d7
                                    gk: J
                                    nk: sc
                                    of: mo
                                    v: scJ
                                  t: J
                                  "y": 
                                    cv: '0.4'
                                    next: &53 
                                      c: 
                                        code: !!perl/code: '{ "DUMMY" }'
                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sc = $C->{sc};\nmy $J = $C->{sc}->{J};\n$A->{c}->{pin} = $C->{c}->{pin} || $C->{c}->{J} || $G->{h}->($A,$C,$G,$T,\"sc\",\"J\") ->{t};\n};"
                                      sc: 
                                        acgt: s
                                        act: 1
                                        args: A,C,G,T,s
                                        dige: f6df395d9a7c
                                        gk: J
                                        nk: sc
                                        of: mo
                                        v: scJ
                                      t: J
                                      "y": 
                                        cv: '0.5'
                                        next: &50 
                                          c: 
                                            code: !!perl/code: '{ "DUMMY" }'
                                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','say','mive');\n$G->{h}->($A,$C,$G,$T,'say','sayre',\"YEP \".ki$C);\n};"
                                          sc: 
                                            acgt: s
                                            act: 1
                                            args: A,C,G,T,s
                                            dige: b421611797be
                                            of: mo
                                          t: mo
                                          "y": 
                                            cv: '0.5'
                                            next: &51 
                                              c: 
                                                code: !!perl/code: '{ "DUMMY" }'
                                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sc = $C->{sc};\nmy $J = $C->{sc}->{J};\n$G->{h}->($A,$C,$G,$T,'say','sayre',\"Re $J->{t}\");\n$J->{sc}->{n} && $G->{h}->($A,$C,$G,$T,\"rea\",$J);\n$J->{sc}->{u} && $G->{h}->($A,$C,$G,$T,\"rea\",$J->{sc}->{u});\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"St $J->{t}\");\nmy $y = {cv=>0.9};\nmy $M = [];\nmy $c = {};\nmy $r = $J->{sc}->{root} = $G->{h}->($A,$C,$G,$T,\"A\",n=>1=>$J=>[$J->{t},$y,$c]);\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"Ive $J->{t}\");\n$G->{w}->($A,$C,$G,$T,\"$A->{c}->{pin}\",A=>$A,C=>$C,G=>$G,T=>$T,J=>$J,y=>$y,M=>$M);\n$c->{M} = $M if @$M;\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"$J->{t} Done pin, doing root:\");\n$G->{h}->($A,$C,$G,$T,\"A\",$r,6);\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"$J->{t} done!!!\");\n};"
                                              sc: 
                                                acgt: s
                                                act: 1
                                                args: A,C,G,T,s
                                                dige: 9772fadc2c9e
                                                gk: J
                                                nk: sc
                                                of: mo
                                                v: scJ
                                              t: J
                                              "y": 
                                                cv: '0.6'
                                                next: &52 
                                                  c: 
                                                    code: !!perl/code: '{ "DUMMY" }'
                                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sc = $C->{sc};\nmy $J = $C->{sc}->{J};\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"Oscillate $J->{t}\");\n$G->{h}->($A,$C,$G,$T,\"A\",s=>8=>$J);\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"Oscillate $J->{t} done!@!\");\n};"
                                                  sc: 
                                                    acgt: s
                                                    act: 1
                                                    args: A,C,G,T,s
                                                    dige: 87b7acec9f49
                                                    gk: J
                                                    nk: sc
                                                    of: mo
                                                    v: scJ
                                                  t: J
                                                  "y": 
                                                    cv: '0.7'
                                                    next: 
                                                      c: 
                                                        code: !!perl/code: '{ "DUMMY" }'
                                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sc = $C->{sc};\nmy $J = $C->{sc}->{J};\n# through J's microJ of personality\n};"
                                                      sc: 
                                                        acgt: s
                                                        act: 1
                                                        args: A,C,G,T,s
                                                        dige: 24608a06706a
                                                        gk: J
                                                        nk: sc
                                                        of: mo
                                                        v: scJ
                                                      t: J
                                                      "y": 
                                                        cv: '0.8'
                                                        prev: *52
                                                    prev: *51
                                                prev: *50
                                            prev: *53
                                        prev: *49
                                    prev: *54
                                prev: *48
                            prev: *47
                        prev: *55
                    prev: *56
                prev: *46
    - 
      c: 
        W: of
      t: 'n'
      "y": 
        cv: '0.001'
        in: &63 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$A->{2} = shift @$s;\n$A->{c}->{u} = $G->{h}->($A,$C,$G,$T,\"sJ\",$A->{2},'u');\n$A->{c}->{n} = $G->{h}->($A,$C,$G,$T,\"sJ\",$A->{2},'n');\n};"
          sc: 
            acgt: s
            act: 1
            args: A,C,G,T,s
            dige: 04e5336b836e
            of: 'n'
          t: 'n'
          "y": 
            cv: '0.1'
            next: &62 
              c: 
                code: !!perl/code: '{ "DUMMY" }'
                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $u = $A->{c}->{u};\nif (!$u->{c}->{o}) {\n    $u->{c}->{base} = 'theu'; # the PiMachine\n    # resolve our mind\n    $A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"resolve our mind\");\n    $G->{h}->($A,$C,$G,$T,\"A\",s=>8=>$u);\n    # merge its i/ii thing ideas into our 2\n    $G->{h}->($A,$C,$G,$T,\"A\",o=>8=>$A->{2},$u,$_) for 'i','ii';\n}\n#$A->{i} = $A->{2}->{sc}->{i};\n#$A->{ii} = $A->{2}->{sc}->{ii};\n};"
              sc: 
                acgt: s
                act: 1
                args: A,C,G,T,s
                dige: c2995adebdd3
                of: 'n'
              t: 'n'
              "y": 
                cv: '0.2'
                next: &61 
                  c: 
                    code: !!perl/code: '{ "DUMMY" }'
                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n@$s = ([@$s]) if ref $s->[0] ne 'ARRAY';\n$A->{m} = $A;\nfor my $l (@$s) {\n    my $mo = $G->{h}->($A,$C,$G,$T,\"tugA\",mo=>1,@$l);\n    $A->{c}->{n}->{sc}->{a}->{$A->{2}->{c}->{ch}||''}->{$mo->{c}->{sip}} = $mo;\n}\ndelete $A->{2}->{c}->{o}; # orderliness\n};"
                  sc: 
                    acgt: s
                    act: 1
                    args: A,C,G,T,s
                    dige: 59f873e34157
                    of: 'n'
                  t: 'n'
                  "y": 
                    cv: '0.3'
                    next: &60 
                      c: 
                        code: !!perl/code: '{ "DUMMY" }'
                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# become aware of past, surface vibration\n};"
                      sc: 
                        acgt: s
                        act: 1
                        args: A,C,G,T,s
                        dige: c98266a33cc0
                        of: 'n'
                      t: 'n'
                      "y": 
                        cv: '0.4'
                        next: &59 
                          c: 
                            code: !!perl/code: '{ "DUMMY" }'
                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# more thinks\n};"
                          sc: 
                            acgt: s
                            act: 1
                            args: A,C,G,T,s
                            dige: 7247c005cc7b
                            of: 'n'
                          t: 'n'
                          "y": 
                            cv: '0.5'
                            next: &58 
                              c: 
                                code: !!perl/code: '{ "DUMMY" }'
                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# etc\n};"
                              sc: 
                                acgt: s
                                act: 1
                                args: A,C,G,T,s
                                dige: 94be466f80d7
                                of: 'n'
                              t: 'n'
                              "y": 
                                cv: '0.6'
                                next: &57 
                                  c: 
                                    code: !!perl/code: '{ "DUMMY" }'
                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# compress\n};"
                                  sc: 
                                    acgt: s
                                    act: 1
                                    args: A,C,G,T,s
                                    dige: 91f99cb9c987
                                    of: 'n'
                                  t: 'n'
                                  "y": 
                                    cv: '0.7'
                                    next: 
                                      c: 
                                        code: !!perl/code: '{ "DUMMY" }'
                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# intertime\n};"
                                      sc: 
                                        acgt: s
                                        act: 1
                                        args: A,C,G,T,s
                                        dige: b673bf6e6793
                                        of: 'n'
                                      t: 'n'
                                      "y": 
                                        cv: '0.8'
                                        prev: *57
                                    prev: *58
                                prev: *59
                            prev: *60
                        prev: *61
                    prev: *62
                prev: *63
    - 
      c: 
        W: of
      t: o
      "y": 
        cv: '0.001'
        in: &66 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy ($i,$f,$t) = @$s;\n$i->{y} eq $i || die \"i must A\";\n\n($f,my $fis) = ($$f,1) if ref $f eq 'REF';\n$t = $G->{h}->($A,$C,$G,$T,\"Ct\",@$t) if ref $t eq 'ARRAY';\n%$C = %$t if ref $t eq 'HASH';\n$C->{t} = $t if $t && !ref $t;\n\n\n$C->{c}->{i} = $i;\n$C->{c}->{m} ||= $C->{t};\n$C->{c}->{m} = 'zip' if $C->{c}->{m} =~ /^zip(.+)$/;\nif (ref $f eq 'ARRAY') {\n    $C->{c}->{m} = 'z';\n    $C->{c}->{s} = $f;\n}\nelsif ($fis) {\n    $C->{c}->{s} = $f;\n}\nelsif ($f->{y}) {\n    if ($f->{y} eq $f) {\n        # A/J\n        $C->{c}->{h} = $f;\n    }\n    else {\n        # C mo 3 W:of ...\n        #  C mo 1 s:... of:mo,dig:...\n        # $y->{in} or $sc->{z}\n        $C->{c}->{s} = $f;\n        $C->{c}->{m} = 'C';\n    }\n}\nelse {\n    # a zip\n    $C->{c}->{s} = $f;\n}\nif ($C->{c}->{m} eq 'i' || $C->{c}->{m} eq 'ii') {\n    $C->{c}->{kno} = $C->{c}->{m};\n}\nif ($C->{c}->{kno}) {\n    my $h = $C->{c}->{h} || die \"unhoused kno $C->{t} m:$C->{c}->{m}\";\n    $C->{c}->{s} = $h->{sc}->{$C->{c}->{kno}} || $h->{$C->{c}->{kno}};\n    # may have lvism & more via $h->{sc}->{s}.\n}\n};"
          sc: 
            acgt: s
            act: 1
            args: A,C,G,T,s
            dige: eb8d8a63aaf7
            of: o
          t: o
          "y": 
            cv: '0.1'
            next: &64 
              c: 
                code: !!perl/code: '{ "DUMMY" }'
                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $oo = $A->{c}->{oo} = {};\n# < space-for (C) < t < y [many o with .$c->{s} = $e, $o->{y}->{etc} = etc]\n# per other itself in 3, way in is noise-ish\nif ($C->{c}->{m} eq 'zip') {\n    my $ads = [];\n    for my $k (keys %{$C->{c}->{s}}) {\n        my $v = $C->{c}->{s} ->{$k};\n        $v->{y} && $v->{y} eq $v || die \"zip yon not A\";\n        next if $v eq $A;\n        # light cones holding C or doing another o bunch\n        my $D = $v->{c}->{s};\n        if ($v->{t} eq 'o') {\n            # D is inner o's C - index windups\n            push @$ads, $v;\n            $D->{c}->{i} eq $C->{c}->{i} || die \"o oth i $C->{c}->{i}->{t} <-> $D->{c}->{i}->{t}\";\n            $D->{c}->{j} && die \"o $D->{c}->{t} already got j\";\n            $D->{c}->{jC} && die \"o $D->{c}->{t} already got jC\";\n            $D->{c}->{jC} = $C;\n            my $ii = $v->{c}->{oo} || die \"Too early to oo: $D->{t}\";\n            my $i = 0;\n            for my $t (keys %{$ii->{C}}) {\n                my $vs = $ii->{C}->{$t};\n                for my $cv (keys %$vs) {\n                    my $os = $vs->{$cv};\n                    push @{$oo->{C}->{$t}->{$cv}||=[]}, map {\n                        $_ = $G->{h}->($A,$C,$G,$T,\"hup\",$_);\n                        $_\n                    } @$os;\n                    $i++ for @$os;\n                }\n            }\n            $A->{V} && $G->{h}->($A,$C,$G,$T,'say','say',\"$A->{t} $A->{c}->{sip} $C->{t} claims $i from: $v->{t} $v->{c}->{sip} $D->{t}\");\n        }\n        else {\n            # D is J moment C material to shade\n            my $e = $G->{h}->($A,$C,$G,$T,\"Chade\",$D);\n            my $o = $G->{h}->($A,$C,$G,$T,\"Chs\",$e);\n            $o->{y}->{D} = $D;\n            $o->{y}->{R} = $v;\n            $o->{y}->{k} = $k;\n            push @{$oo->{C}->{$o->{t}}->{$o->{y}->{cv}}||=[]}, $o;\n        }\n    }\n    @$ads = $G->{h}->($A,$C,$G,$T,\"sortysip\",$ads,'1') if @$ads > 1;\n    $G->{h}->($A,$C,$G,$T,\"entug\",$_) for @$ads;\n}\nelsif ($C->{c}->{m} eq 'i') {\n    for my $k (keys %{$C->{c}->{s}}) {\n        my $v = $C->{c}->{s} ->{$k};\n        # inflated t -> s\n        my $e;\n        $e->{t} = $k;\n        $e->{y}->{cv} = 0.1;\n        $e->{c}->{s} = $v;\n        my $o = $G->{h}->($A,$C,$G,$T,\"Chs\",$e);\n        $o->{y}->{k} = $k;\n        push @{$oo->{C}->{$o->{t}}->{$o->{y}->{cv}}||=[]}, $o;\n    }\n}\nelsif ($C->{c}->{m} eq 'ii') {\n    for my $k (keys %{$C->{c}->{s}}) {\n        my $v = $C->{c}->{s} ->{$k};\n        # t -> C\n        my $e = $G->{h}->($A,$C,$G,$T,\"hup\",$v);\n        my $o = $G->{h}->($A,$C,$G,$T,\"Chs\",$e);\n        $o->{y}->{k} = $k;\n        push @{$oo->{C}->{$o->{t}}->{$o->{y}->{cv}}||=[]}, $o;\n    }\n}\nelsif ($C->{c}->{m} eq 'C') {\n    # C\n    my $S = $C->{c}->{s};\n    my $pr;\n    while ($S) {\n        my $e = $G->{h}->($A,$C,$G,$T,\"hup\",$S);\n        my $o = $G->{h}->($A,$C,$G,$T,\"Chs\",$e,$S);\n        push @{$oo->{C}->{$o->{t}}->{$o->{y}->{cv}}||=[]}, $o;\n        if ($pr) {\n            $o->{sc}->{oz}->{yprev} = $pr;\n            $pr->{sc}->{oz}->{ynext} = $o;\n        }\n        $pr = $o;\n        $S = $S->{y}->{next};\n    }\n}\nelsif ($C->{c}->{m} eq 'z') {\n    # [ C... ]\n    for my $S (@{ $C->{c}->{s} }) {\n        my $e = $G->{h}->($A,$C,$G,$T,\"hup\",$S);\n        my $o = $G->{h}->($A,$C,$G,$T,\"Chs\",$e);\n        push @{$oo->{C}->{$o->{t}}->{$o->{y}->{cv}}||=[]}, $o;\n    }\n}\nelse {\n    die \"How to read \".ki $C;\n}\n};"
              sc: 
                acgt: s
                act: 1
                args: A,C,G,T,s
                dige: 7c7bbb1dfa01
                of: o
              t: o
              "y": 
                cv: '0.2'
                next: &65 
                  c: 
                    code: !!perl/code: '{ "DUMMY" }'
                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# opens recursive shop on i called j using $C->{t}\nmy $j = $G->{h}->($A,$C,$G,$T,\"offis\",i=>j=>'t');\n$j->{c}->{Co} = $C;\nmy $jj = $j->{sc}->{oo};\nmy $oo = $A->{c}->{oo};\nmy $cha = $A->{c}->{cha} ||= {};\n# falls until array, $oo->{C}->{t}->{cv} = [thamany]\n$G->{h}->($A,$C,$G,$T,\"Chew\",$oo,'x,t,cv',$_) for sub {\n    my ($o,$x,$t,$cv) = @_;\n    my @o = @$o;\n\n    # sort by zipped from A sips\n    @o = $G->{h}->($A,$C,$G,$T,\"sortysip\",$o,'A','R') if @o > 1;\n    # later overwrite\n    @o = reverse @o;\n\n    $G->{h}->($A,$C,$G,$T,'say','sayre',join\"\\n\",\"Dupl: \",map{\"  $t $cv from $_->{y}->{A}->{c}->{s}->{t}\"}@o) if @o > 1;\n\n    $o = $o[0];\n    my $e = $o->{c}->{s};\n\n    $oo->{\"$x\"}->{\"$t\"}->{\"$cv\"} = $o;\n    my $l = $jj->{\"$x\"}->{\"$t\"}->{\"$cv\"};\n    $o->{y}->{l} = $l if $l;\n    # todo weaken $l->{y}->{l}\n\n    $G->{h}->($A,$C,$G,$T,\"Chang\",$l,$o);\n\n    # throw inward (yin falls to z)\n    if (my $z = $e->{y}->{in} || $e->{sc}->{z}) {\n        my $t = {t=>\"$C->{t}/z $t $cv\"};\n        $t->{c}->{jC} = $C;\n        $t->{c}->{oup} = $o;\n        $G->{h}->($A,$C,$G,$T,\"tugA\",o=>1,$C->{c}->{i},$z,$t);\n    }\n\n    # ty in above o\n    $A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"$t $cv is from $o->{y}->{A}->{c}->{s}->{t}\") if $o->{y}->{A} ne $A;\n\n    if (my $u = $C->{c}->{oup}) {\n        if (my $al = $u->{sc}->{bz}->{\"$t\"}->{\"$cv\"}) {\n            #sayre \"ALREADY a $C->{t}: on $u->{t}: $t $cv from $al->{y}->{A}->{c}->{s}->{t}: $al->{t} $al->{y}->{cv}\";\n            # zip hup'd acquired o but still..?\n        }\n        $o->{y}->{up} = $u;\n        $u->{sc}->{bz}->{\"$t\"}->{\"$cv\"} = $o;\n        #sayyl \"Place $u->{t} $u->{y}->{cv} $u ($u->{y}->{A}->{c}->{s}->{t}) from $C->{t}: $o->{t} $o->{y}->{cv} $o\";\n    }\n};\n};"
                  sc: 
                    acgt: s
                    act: 1
                    args: A,C,G,T,s
                    dige: abe6cda7a9a4
                    of: o
                  t: o
                  "y": 
                    cv: '0.3'
                    next: 
                      c: 
                        code: !!perl/code: '{ "DUMMY" }'
                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $j = $C->{c}->{j};\nmy $jj = $j->{sc}->{oo};\nmy $oo = $A->{c}->{oo};\nmy $cha = $A->{c}->{cha} ||= {};\n$G->{h}->($A,$C,$G,$T,\"Chew\",$oo,'x,t,cv',$_) for sub {\n    my ($o,$x,$t,$cv) = @_;\n    my $l = $o->{y}->{l};\n\n    # $o->{sc}->{bz}.$t.$cv inward check\n    my $sc = 'sc';\n    my $z = 'z';\n    if (my $bz = $o->{sc}->{bz}) {\n        $G->{h}->($A,$C,$G,$T,\"Chew\",$bz,'t,cv',$_) for sub {\n            my ($to,$dt,$dcv) = @_;\n\n            my $m = !$to->{c}->{cha} ? 'same' : $to->{y}->{l} ? 'diff' : 'new';\n            $o->{c}->{\"$m\"}->{\"$sc\"}->{\"$z\"}->{\"$dt\"}->{\"$dcv\"} = $to;\n            $to->{c}->{cha} || return;\n            #sayyl \" - $t $cv has: $dt $dcv \".ki $to->{c} if $to->{c}->{cha}; \n            $o->{c}->{cha}->{\"$m\"}->{\"$sc\"}->{\"$z\"}->{\"$dt\"}->{\"$dcv\"} = $to;\n        }\n    }\n    if (my $dz = $l && $l->{sc}->{bz}) {\n        my $bz = $o->{sc}->{bz};\n        $G->{h}->($A,$C,$G,$T,\"Chew\",$dz,'t,cv',$_) for sub {\n            my ($to,$dt,$dcv) = @_;\n            $bz->{\"$dt\"}->{\"$dcv\"} && return;\n            my $m = 'gone';\n            $o->{c}->{\"$m\"}->{\"$sc\"}->{\"$z\"}->{\"$dt\"}->{\"$dcv\"} = $to;\n            $o->{c}->{cha}->{\"$m\"}->{\"$sc\"}->{\"$z\"}->{\"$dt\"}->{\"$dcv\"} = $to;\n        }\n    }\n\n    # wires\n    # notes from 2 - see upmost o's origin C ref index,\n    # contributed to by all under\n    if (my $oz = $o->{sc}->{oz}) {\n        for my $on (keys %$oz) {\n            my $to = $oz->{\"$on\"};\n            if ($to->{y}->{A} eq $A) {\n                if ($oo->{C}->{\"$to->{t}\"}->{\"$to->{y}->{cv}\"} eq $to) {\n                    #sayre \"  -- have $on: $to->{t} $to->{y}->{cv}\";\n                }\n                else {\n                    die \"$t $cv Dont have $on: $to->{t} $to->{y}->{cv} \".wdump 2, $oo->{C};\n                    # $cha->{lost}? might be above or below o A\n                }\n            }\n            else {\n                $G->{h}->($A,$C,$G,$T,'say','sayre',\"   ++ $on: $to->{t} $to->{y}->{cv} from other A\");\n            }\n        }\n    }\n\n    if (!$o->{y}->{l}) {\n        $cha->{\"$x\"}->{\"$_\"}->{\"$t\"}->{\"$cv\"} = $o for 'new';\n        $o->{c}->{el} = 1;\n    }\n    elsif ($o->{c}->{cha}) {\n        $cha->{\"$x\"}->{\"$_\"}->{\"$t\"}->{\"$cv\"} = $o for 'diff';\n    }\n};\n$G->{h}->($A,$C,$G,$T,\"Chew\",$jj,'x,t,cv',$_) for sub {\n    my ($o,$x,$t,$cv) = @_;\n    $oo->{\"$x\"}->{\"$t\"}->{\"$cv\"} && return;\n    $A->{V} && $G->{h}->($A,$C,$G,$T,'say','say',\"Goner $C->{t} $C->{y}->{cv}  --  $x $t $cv ----\");\n    $cha->{\"$x\"}->{\"$_\"}->{\"$t\"}->{\"$cv\"} = $o for 'gone';\n};\n!keys %$cha && delete $A->{c}->{cha};\n# names -> A fall replace to check inside\n$j->{sc}->{oo} = $oo;\n};"
                      sc: 
                        acgt: s
                        act: 1
                        args: A,C,G,T,s
                        dige: 4486a2323147
                        of: o
                      t: o
                      "y": 
                        cv: '0.4'
                        prev: *65
                    prev: *64
                prev: *66
    - 
      c: 
        W: of
      t: of
      "y": 
        cv: '0.001'
        in: 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $sc = $C->{sc};\nmy $of = $C->{sc}->{of};\nmy $J = $C->{c}->{J};\nmy $V = $C->{c}->{V};\nmy $k = $C->{y}->{k};\nmy $at = $C->{y}->{at};\nmy $ta = $C->{y}->{ta};\nmy $lv = $C->{y}->{lv};\nmy $vl = $C->{y}->{vl};\n#n $s=>''=>{W=>'of'}\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','say',\"OFing ! $C->{t} $C->{y}->{cv} \".ki $C->{sc});\n# compile language, see 9 cono\n# container process is traveling bunches of code, see 99 Traweil\n# place toward $A->{ii}->{\"$s\"}, linked list of embryo\n\n# rennovating around town\n# a geodesic self-mover\n# keeps rebuilding in different locations\n};"
          sc: 
            acgt: s
            act: 1
            args: A,C,G,T,s
            dige: ffa70bef9f53
            gk: of
            nk: sc
            nov: 1
            nv: scof
            of: of
            rg: cJ,cV,yk,yat,yta,ylv,yvl
            v: scof
          t: of_1
          "y": 
            cv: '0.1'
    - 
      c: 
        W: of
      t: s
      "y": 
        cv: '0.001'
        in: &67 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$A->{2} = shift @$s;\n$A->{c}->{n} = $G->{h}->($A,$C,$G,$T,\"sJ\",$A->{2},'n');\n# C is self for s\n# C is 's many for o\n$A->{c}->{s} = $G->{h}->($A,$C,$G,$T,\"sJ\",$A->{2},'s');\n};"
          sc: 
            acgt: s
            act: 1
            args: A,C,G,T,s
            dige: fb6b46b52105
            of: s
          t: s
          "y": 
            cv: '0.1'
            next: &73 
              c: 
                code: !!perl/code: '{ "DUMMY" }'
                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# number of things plugged in to s from J\nfor my $J ($A->{2}) {\n    $C->{c}->{\"$_\"} = $J->{c}->{\"$_\"} for grep{ $J->{c}->{\"$_\"} } qw'whole base';\n}\nif (my $W = $C->{c}->{whole}) {\n    my $s = $G->{h}->($A,$C,$G,$T,\"t\",$W) || die \"no $W\";\n    $G->{h}->($A,$C,$G,$T,\"A\",o=>8,$C,$s,'whole');\n    # place on us\n    return $T->{Z}->{8} = $A;\n}\nmy $tug;\nif (my $W = $C->{c}->{base}) {\n    my $s = $G->{h}->($A,$C,$G,$T,\"t\",$W) || die \"no $W\";\n    $A->{V} && $G->{h}->($A,$C,$G,$T,'say','say',\"Base ! \".ki $s);\n    $tug->{base} = $G->{h}->($A,$C,$G,$T,\"A\",o=>2,$C,$s,'base');\n}\nif (my $n = $A->{c}->{n}) {\n    $C->{sc}->{ch} = $A->{2}->{sc}->{ch} if !defined $C->{sc}->{ch};\n    $C->{sc}->{ch} = '' if !defined $C->{sc}->{ch};\n    $tug->{ground} = $G->{h}->($A,$C,$G,$T,\"A\",o=>2,$C,$n->{sc}->{a}->{$C->{sc}->{ch}},'zip');\n}\n$tug || die \"No ground to $A->{2}->{t}\";\n$C->{c}->{zip} = $G->{h}->($A,$C,$G,$T,\"A\",o=>4,$C,$tug,'zipover');\n};"
              sc: 
                acgt: s
                act: 1
                args: A,C,G,T,s
                dige: 5f222a6d8ed7
                of: s
              t: s
              "y": 
                cv: '0.2'
                next: &72 
                  c: 
                    code: !!perl/code: '{ "DUMMY" }'
                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','say',\"S  3 $A->{2}->{t}\");\nmy $z = $C->{c}->{zip};\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','saybl',\"AN zip: $z->{t} $z->{cv} / $z->{c}->{sip} \".wdump 7, $z->{c}->{cha});\n# J t/y awakens\n# W t/y awakens\n};"
                  sc: 
                    acgt: s
                    act: 1
                    args: A,C,G,T,s
                    dige: c4bc71b5f1c6
                    of: s
                  t: s
                  "y": 
                    cv: '0.3'
                    next: &71 
                      c: 
                        code: !!perl/code: '{ "DUMMY" }'
                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# pieces sorted\n# brings up W inners <9 like t/y clang\n};"
                      sc: 
                        acgt: s
                        act: 1
                        args: A,C,G,T,s
                        dige: 33a3ed3b3f5e
                        of: s
                      t: s
                      "y": 
                        cv: '0.4'
                        next: &68 
                          c: 
                            code: !!perl/code: '{ "DUMMY" }'
                            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# goS made\n$A->{V} && $G->{h}->($A,$C,$G,$T,'say','sayyl',\"5  $A->{2}->{t}\");\n};"
                          sc: 
                            acgt: s
                            act: 1
                            args: A,C,G,T,s
                            dige: 36b4ecd488db
                            of: s
                          t: s
                          "y": 
                            cv: '0.5'
                            next: &70 
                              c: 
                                code: !!perl/code: '{ "DUMMY" }'
                                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# going - figure difference\n$C->{c}->{el} = '2' if 1 == 3;\n};"
                              sc: 
                                acgt: s
                                act: 1
                                args: A,C,G,T,s
                                dige: bbf0c558c76c
                                of: s
                              t: s
                              "y": 
                                cv: '0.6'
                                next: &69 
                                  c: 
                                    code: !!perl/code: '{ "DUMMY" }'
                                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# pack down goods\n};"
                                  sc: 
                                    acgt: s
                                    act: 1
                                    args: A,C,G,T,s
                                    dige: 8daf0e41799c
                                    of: s
                                  t: s
                                  "y": 
                                    cv: '0.7'
                                    next: 
                                      c: 
                                        code: !!perl/code: '{ "DUMMY" }'
                                        s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n# tie together\n$A->{c}->{expo}->{\"$_\"} = 1 for qw'tv i ii';\n$A->{2}->{sc}->{\"$_\"} = $C->{sc}->{\"$_\"} for keys %{$A->{c}->{expo}};\n$A->{2}->{c}->{o} = \"Steved \".++$C->{c}->{imp};\n# send out\n};"
                                      sc: 
                                        acgt: s
                                        act: 1
                                        args: A,C,G,T,s
                                        dige: 325c56a552ad
                                        of: s
                                      t: s
                                      "y": 
                                        cv: '0.8'
                                        prev: *69
                                    prev: *70
                                prev: *68
                            prev: *71
                        prev: *72
                    prev: *73
                prev: *67
    - 
      c: 
        W: of
      t: u
      "y": 
        cv: '0.001'
        in: &75 
          c: 
            code: !!perl/code: '{ "DUMMY" }'
            s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\n$A->{3} = shift @$s; # for\n$A->{2} = $G->{h}->($A,$C,$G,$T,\"sJ\",$A->{3},'u');\n};"
          sc: 
            acgt: s
            act: 1
            args: A,C,G,T,s
            dige: 74052ef45c32
            of: u
          t: u
          "y": 
            cv: '0.1'
            next: &74 
              c: 
                code: !!perl/code: '{ "DUMMY" }'
                s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nif ($A->{2}->{c}->{o}) {\n    $G->{h}->($A,$C,$G,$T,\"sesh\",$A->{2});\n    # o is the J's orderliness mark\n    # also its current position relative to itself\n    # make many pages of u per $A->{3}\n}\n};"
              sc: 
                acgt: s
                act: 1
                args: A,C,G,T,s
                dige: 71b0e28485f3
                of: u
              t: u
              "y": 
                cv: '0.2'
                next: 
                  c: 
                    code: !!perl/code: '{ "DUMMY" }'
                    s: "sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $n = $A->{c}->{n} = $G->{h}->($A,$C,$G,$T,\"A\",n=>1=>$A->{2},@$s);\n$n->{c}->{u}->{c}->{whole} = 'theu';\n$G->{h}->($A,$C,$G,$T,\"A\",$n,3);\n};"
                  sc: 
                    acgt: s
                    act: 1
                    args: A,C,G,T,s
                    dige: d117535c2ed7
                    of: u
                  t: u
                  "y": 
                    cv: '0.3'
                    prev: *74
                prev: *75
t: theu
"y": 
  cv: '0.1'
