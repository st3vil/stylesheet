Text: | # search through text
    # < wanting to pick abilities onto what you're holding
    Js&ein.bo = 'Doable';
    Jc&tape = 'Dejo';
    Jc&save = 'Dejo';
    S
    
    m sayin=>-tin
    
    Js&sayin ||= 'Continues';
    
    m f=>'',"For Js&sayin:", 'dis:1'
    
    my @l = `ack "Js&sayin" g/s g/j`;
    my ($files,$ftw);
    my @z;
    for (@l) {
        my ($f,$i,$s) = split ':',$_,3;
        my $lines = $files.>$f ||= [`cat $f`];
        my $t;
        my $in = 0;
        my $cs = 0;
        my $pc = '#'.'c';
        for (reverse @{$lines}[0..$i-1]) {
            $cs++ if /$pc/;
            $in++, next unless /^([\/\w]+):/;
            $t = $1;
            last;
        }
        $t || die "Fis $f,$i,$s";
        my $C = $ftw.>$f.>$t ||= G&Ct,[$t=>''];
        push @{s&z||=[]}, G&Ct,[$in=>''=>$s,{cs=>$cs}];
    }
    
    # want to capture those groundings and put them in a C ^
    # that is yay spatially transparent
    
    #n so=>3=>join('',@l)
    m files=>-ftw=>{s=>$ftw}

pi/tin: | # code boxen, re C.t to alter? check js, hold something?
    #C&fs = 19;
    #s&ab = 1;
    #s&ri = 0;
    #s&zi = -30;
    #.imp++;
    if (s&ha eq '1') {
        #s&mh = '30%';
        #s&mw = '100%';
        #s&over = 'scroll';
    }
    else {
        s&mh = 7;
        s&mw = '50%';
        s&over = 'hidden';
    }
    s&dis = 1;
    n t=>1=>C.t,'%sha:4 9 5 698'
    
    my $h = A.3.sc;
    $s = $h.>C.t ||= C.t;
    
    my $sc = G&peel,'%cod:perl,dig:steve,dos:tinput';
    #sc.width = 4;
    #sc.height = 3;
    sc.dig = s&dig if s&dig;
    n "z fo" =>1 =>{s=>$s},$sc
    
    y.at.cssdel = 'transform';


tinput: | # handly talky box
    # should be of autocomplete, lost-focus and escape
    
    my $s = us&code || die "Nocode to tinput";
    my $j = e&_hJ;
    1 && saybl "tinput: ".G&es , " (J.t's j.t) says: $s";
    
    my $was = J.sc.>j.t;
    J.sc.>j.t = $s;
    T.pos = $was ne j.t;
    #J.vid = us&code;


