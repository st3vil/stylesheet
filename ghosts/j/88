ET: | # many set T after e
    my $et = 3c&ET || die "noET";
    my $wayby = Rw ef/Bs $t=w 1;
    #$wayby = G&es;
    my $t = et.y.next ||= G&Ct:["after ".$wayby =>''];
    tc&s ||= G&es;
    
    # 
    # 1c&ET &&
    # Rw ET + $wake 2;
    my ($n,$huh) = @{ar.m};
    t.y.cv = "0.$n";
    
    my $wake = ar.wake || [];
    if ($n eq '2') { # wake to the smallest j we visited
        if ($J ne $j) {
            push @$wake, $j;
        }
    }
    elsif ($n eq '1') { # wake probably (not definitely) nothing
    }
    else {
        die "What doing?".
        G&give:Budge=>[el=>''=>{s=>[$ar]}];
    }
    
    for my $J (@$wake) {
        my $z;
        z.t = Rw fe/upJpath $J;
        # note what way it came from
        zs&wayby = $wayby;
        push @{ts&z||=[]}, $z;
    }
ETsleepier: | # mo considers waking up early
    A.1 eq A.3 && return
        Rw FourSleep;
    my $r = 3c&TE; # the one's results
    my $p = 2c&ET; # the last many's expectation
    # 
    my $t = A.1.t;
    
    my $h; # here, with t
    my @z = grep{$_} map { # in here, shortened t, same y/c/sc
        _.t =~ /^\Q$t\E$/ ? do {
            $h = $_;
            0
        } :
        _.t =~ /^\Q$t\E;?(.*)?$/ ? do {
            my $hash = {%$_,t=>$1};
        } : undef; # not here
    } @{ps&z||[]};
    
    my $d = 1c&ET = {}; # our many's expectation
    dc&want.children = 1 if @z;
    
    
    if ($h || @z) {
        push @{rs&z}, "1c&sip A.1.t: $h / ".@z;
        ds&z = \@z;
        #G&give:Budge=>[indl=>''=>{dl=>4,s=>[$t,$r,\@z]}];
    }
        
    #push @{rs&z}, "1c&sip A.1.t --> ".G&aC,$_ for @z;
    
    
    Rw FourSleep;
    # 3c&ET 
    # and our 1c&ET replace with new directions
    # if some clues, sleep
    
    push @{rs&z}, "1c&sip     A.1.t --- -s&pi   a&dec";
    
    
    # 
    
    # hook M with many of this function too
    # if the first group of -pis are still the rest can sleep?
IET: | # singularly you ET
    A.1 eq A.3 || die "Be W";
    my $et = 3c&ET;
    
    # the map to use this time
    my $t = 3c&ET = et.y.next || {};
    
    # to what will be
    my $r = 3c&TE = {};
    
    # should A.3 local...
    4c&way_foursleep = 'ETsleepier';
    
    # to show what it went in with
    G&timer,0.2,$_ for &{
    G&give:Budge=>[edoddl=>''=>{dl=>4,s=>[$t,$r]}];
    };
