pi/worms: | # G.t enTrances
    s&dis = 1;
    Rw Tiot + $nodis=1;
    
    
    s&open = 1;
    my $s = C.t || die "nowhere"; # our c&s disappears...
    n lies=>-lise_1=>$s,'%qz,fs'
    
    my $t = T.op;
    my $z = ts&z;
    # each t shows its uniqueness beyond its parent
    my @tops = Rw rez/thier $z;
    for my $C (@tops) {
        my @l = Rw ind/sort;
        for my $C (@l) {
            $C = Rw Min/bits + $dos=EatPi;
            s&pi = 'worm';
            s&ma = 0.1;
            if (c&depth) {
                # short
            }
            else {
                c&s = $1 if C.t =~ /^\Q$s\E\/([^\/]+)$/;
                s&ml = 0.4;
            }
            s&fs = 17 - 4 * c&depth;
            s&fs = 3 if s&fs < 3;
            delete s&ml;
            delete s&dis;
        }
    }
pi/worm: | # the enTrancement of G.t
    s&dis = 1;
    Rw Tiot + $nodis=1;
    
    
    s&open = 1;
    Jc&ETmode = 2;
    #n yoa=>2=>ki($s),'fs:7,hs:595'
    #n self=>-od_3=>{dl=>1,s=>$C}
    my $f = C.t;
    $f =~ s/^s\/// || die "-worm not in s: $f";
    
    
    
    # can locate 
    n w=>-wormin=>{f=>$f},qz
    #,qz
    
    # < sleep these on o of the y.C we are
    
    n ways=>-ways_2=>{s=>T.op}
    
    Rw EditLatter;
    
    
pi/wormin: | # open anything useful
    1s&piduces = 'ofw';
    # what 1-2
    # how 2-3
    # ways 3-4
    # shapes 4-5
    Rw fe/since;
    my $v =
    n c&f=>''=>{W=>c&f,pin=>'WormCo',Wea=>'Co'}
    my $j = vs&J;
    my ($w) = grep{_.t eq 'w'} 
        Rw fe/since their;
    
    my $s = join"\n", G&ind,$w,'aC';
    n c&f=>''=>{s=>$s}
    n "c&f od"=>-od=>{s=>$w}
    
    y.n = 3;
    y.u = 4;
    for my $o (@{ws&z}) {
        my $C =
        m $o
        s&pi = 'ofw';
    }
    # be the source of these...
    
    
pi/wormin/intake: | # write worm  from $M
    # collect M, elvis to WormCo
    my $f = j.t;
    -f $f || die "$f not there! am ".G&sn,$j;
    
    # New names-only want to be inflated to empty
    for (@{ar.N||[]}) {
        # make copy that will be in -codetta form,
        # convert that to -code to get yaml around it
        # < rename -code -ycode?
        my $C = G&hup,$_;
        s&pi ||= 'codetta';
        c&s ||= "#";
        s&note ||= "new";
        my $M = [$C];
        my $o = Rw pi/codetta/to/code $M;
        G&xo,$_,$o;
    }
    
    Rw cz/M $M $pi=ofw;
    
    G&give,Budge=>[ofw_intake=>''=>{s=>$M}];

WormCo: | # be another
    # receive updates to self via elvis
    
    saybl "WormCo C.t  A&must_save_in ".ki Js&top && Js&top.sc.z;
    Rw FeedTape;
    #@$M = grep { _.t eq 'w' } @$M;
    return;
    #glap: %of:w
    #    figuration

