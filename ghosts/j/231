do/Launch: | # W button
    $Nt = cc&s.split('-');
    
    $with_restart = e.t.indexOf('S') >= 0;
    with_restart and Nt.map(&t{ delete 4s&Jtv[t] })
    
    ~>99 Launch: cc&s
    
    each it Nt {
        ~>38 wants: t
        G&e,[t]
    }
    T.ok = 1;
do/Shrinkage: |
    # go, controluma
    #debugger;
    if (e.t.match(/^C/)) { # show/hide
        $Y = c.y.A;
        !Y and throw "noY",c
        $u = Y.up.c.s;
        # is the thing to keep, hide siblings
        $here = c.y.on; 
        # a c.y.A.on should get pointed to the eventual element right?
        # sometimes c.y.on doesn't turn up (from Hut's A&om)
        !here && c.y.OC and here = c.y.OC.y.on;
        here ||= $(Y.on).find('[t="'+u.t+'"] > [t="'+c.t+'"]')
        !c.y.on && !here and throw "Your cyon?", c
        here ||= c.y.on || Y.on;
        $them = $(here).siblings(); 
        
        j = Y.1;
        $tog = js&shrunken = !js&shrunken;
        tog ? them.slideUp() : them.slideDown();
        ~Shrinkage: Y.1.t, c.t
        T.ok = 1;
    }
    else
    if (e.t.match(/^S/)) { # re-say
        $Y = c.y.A;
        delete Y.1.sc.brains;
        delete T.el;
        ~Rebrained: Y.1.t, c.t
    }
    else { # wake, general
        delete T.el;
    }
dosclick: | # what any webby W can experience s&dos, does s
    #G&E,'hC s&dos';
    # 
    A&dosclicked > 5 and return ~>99 dosclickloop: A.1.t
    A&dosclicked ||= 0;
    A&dosclicked++;
    
    $s = 1s&s;
    !s and G&TuneTimeMachine,'nosyet'
    # #  #
    if (ec&p) {
        if (typeof ec&p == 'string') {
            ec&p = G&way,'j/de/Teev',{s:ec&p,to:'cv'}
        }
        if (!ec&path) {
            $t = ss&top;
            ec&path = [t];
            each ip ec&p {
                p.t == t.t && p.y.cv == t.y.cv and continue;
                $v = t.y.tv && t.y.tv[p.t];
                if (p.y.cv) {
                    v = v[p.y.cv]
                }
                else {
                    !v and break;
                    $pos = Object.keys(v||{});
                    pos.length != 1 and throw "moret "+i+":",v,ec&p,A.1
                    v = v[pos[0]];
                }
                !v and throw "No point "+i+": "+ki(ec&p)
                ec&path.push(v);
            }
            ec&path = ec&path.map(&s{
                !s.y.A and throw "no A to lie path";
                return {A:s.y.A};
            });
        }
    }
    
    $D = G&E:'hC s&dos -1';
    # means doing could have happened without Jing,
    #   if they had the C of it, as elemental events would
    D ||= G&E:'hC s&dow -1';
    
    if (D) {
        !Ds&dos and Ds&dos = Ds&dow
        $ar = G&F:D,'s&dos peel:way:@m';
        ~>3 dos: ar.way, ki(D.sc,4)
        ar.e = e;
        ar.c = D;
        G&way,ar.way,ar;
        return T.el = 1;
    }
    else {
        #debugger;
    }
    #debugger;
    #1s&M.push("Anteract: "+4s&ki(C,3));
    
SwitchupEl: | # tweak Elemental bitology
    # eg dos:"SwitchupEl:4msgs:css:overflow:hidden/scroll"
    $find = m.shift();
    find == '4on' and find = A.4.on;
    else
    find.slice(0,1) == '4' and find = A.4.sc[find.slice(1)]
    $el = $(find);
    !el and throw "Nofind "+find;
    if (m[0] == 'W') {
        m.shift();
        el = $(el.children().get().filter(&s{
            return s.A && s.A.3 && s.A.3 == s.A.1
        }))
    }
    if (m[0] == 'leftbehind') {
        m.shift();
        el = $(el.get().filter(&s{
            $F = s.A && s.A.4;
            return !F || G.DNS[F.t] == F ? 0 : 1
        }))
    }
    
    $adjust = m.shift();
    $property = m.shift();
    $between = m.shift();
    if (between) {
        between = between.split('/');
        $now = el[adjust](property);
        $i = 0;
        while (between[0] != now) {
            between.push(between.shift());
            i++ > between.length and throw "Didnt start with any of "+ki(between);
        }
        between.shift();
        $next = between.shift();
        el[adjust](property, next);
    }
    else {
        property ? el[adjust](property) : el[adjust]()
    }
    ~>Switched: ki(el.get()), property, next
do/cup: |
    $k = c.t;
    $j = c.y.A.1;
    j.c[k] ||= 0;
    j.c[k]++;
    ~>49 cup of: k,j.c[k], ki(j,3)
do/Swaps: |
    $on = c.y.A.on;
    !cs&shortfor and return
    $v = on.innerText == cc&s ? cs&shortfor : cc&s;
    $(on).text(v);

