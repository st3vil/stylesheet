Clalia: | # drag n learn
    G&heading;
    ys&ab = '1';
    ys&height = '30%';
    ys&width = '60%';
    A.noelvis = 1;
    # to make html+javascript that lives a life of its own
    
    $t = window.t = 3s&t = {};
    
    n Classes -Pupula $s:<<'' %ab:1,width:100%,height:100%
    Engineering	4000
      seeing	439	%st:being,pow:24
        c s: |
          Lovely and sighted.
          Takes hold.
        Riddiford	%day:1,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340&1400-1450
      triangle	469	%st:geometrica,pow:12
        c s: |
          Bring togs.
        Riddiford	%day:4,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340&1400-1450
      weld	468	%st:geometrica,pow:9
        c s: |
          Ceramic?
        Riddiford	%day:1,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340;1400-1450
    Art	8000
      weld	868	%st:enjoyment,pow:9
        c s: |
          But with plenty of slop.
        Riddiford	%day:1,time:900-1040
    
    t.emplate = <<'';
    <div id="bits"> Classes </div>
    <div id="week"> Week </div> 
    <div id="info"> Info </div>
    
    t.days = 5;
    t.daystart = '0900';
    t.dayend = '1700';
    t.Start = &{
        $('#bits').replaceWith(t.emplate);
        #$('table td').css('vertical-align','top');
        
        # classes
        $cl = $('#bits').empty()
            .css('position','absolute')
            .css('width','30%')
            .css('height','100%');
        cl = $('<ul>').appendTo(cl)
        each ic t.group {
            $('<li>').appendTo(cl)
                .attr('id',c.id).text(c.t)
                .on('click',t.togGroup);
        }
        
        # week
        $we = $('#week').empty()
            .css('position','absolute')
            .css('left','30%')
            .css('width','40%')
            .css('height','100%');
        $width = 100 / t.days;
        $side = 0;
        for (var day = 1; day <= t.days; day++) {
            $d = $('<div id="day'+day+'">')
                .css('width',width+'%')
                .css('height','100%')
                .css('position','absolute')
                .css('background','rgba('+(day*30)+',120,120,0.3)');
            side and d.css('left', side+'%')
            we.append(d);
            side += width;
        }
        
        # info
        $we = $('#info').empty()
            .css('position','absolute')
            .css('left','70%')
            .css('width','40%')
            .css('height','100%');
        we.css('background','rgba(120,40,40,0.3)');
        we.text('Click on a class');
    };
    t.togGroup = &{
        $g = t.group[this.id];
        !g and return;
        $cl = $(this);
        if (cl.attr('ope')) {
            cl.attr('ope','');
            cl.children().remove();
            return;
        }
        cl.attr('ope',1);
        cl = $('<ul>').appendTo(cl)
        each ic g.z {
            $('<li>').appendTo(cl)
                .attr('id',c.id).text(c.t)
                .on('click',t.graspClass);
        }
    };
    t.graspClass = &e{
        e.stopPropagation();
        $cla = t.class[this.id];
        !cla and return
    };
    
    

    
    G&yl:0.05,&s{ t.Start() };
    
    #
pi/Pupula: |
    $io = G&way,'iooia';
    ys&id = 'bits';
    ys&width = '30%';
    
    n t 1 $s:C.t
    
    if (typeof s == 'string') {
        $uni = G&readLines,s;
        # now we have a university using C
        # make a few bits of csv since reality
        $tables = 3s&t;
        $ids = {};
        $everything = [];
        $insert = &type,s{
            $c = ex({},s.sc);
            c.type = type;
            
            s.y.cv != 0.1 and c.id = (s.y.cv+'').replace(/^0\./,'')
            else {
                ids[type] ||= 0;
                c.id = ids[type]++
            }
            
            c.t = s.t;
            sc&s and c.desc = sc&s
            everything.push(c);
            $table = tables[type] ||= {};
            table[c.id] = c;
            return c
        };
        # < io/S at many indent levels... call em ay,by,cy,dy...
        $ta = 3s&tables = {};
        $uni = G&Cye,['uni','','',{z:uni}];
        o $uni/:group/:class/:time
        io.nz().ind(&s,t{
            #debugger;
            ~Aye: t.ark, ki(s,2)
            t.ark == 'uni' and return
            $c = insert(t.ark,s);
            c.z = [];
            $up = t.parenting;
            up and up.z.push(c)
            return c
        });
        everything.map(&c{ c.z && !c.z.length && delete c.z });
        #n thing  $s:eny(tables) %ws:pre,dis:block
        #return
    }
    
    
    
    

