Clalia: | # drag n learn
    G&heading;
    A.noelvis = 1;
    # to make html+javascript that lives a life of its own
    
    $t = window.t = 3s&t = {};
    n Classes -Pupula $s:<<''
    Engineering	4000
      seeing	439	%st:being,pow:24
        c s: |
          Lovely and sighted.
          Takes hold.
        Riddiford	%day:1,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340&1400-1450
      triangle	469	%st:geometrica,pow:12
        c s: |
          Bring togs.
        Riddiford	%day:4,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340&1400-1450
      weld	468	%st:geometrica,pow:9
        c s: |
          Ceramic?
        Riddiford	%day:1,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340;1400-1450
    Art	8000
      weld	868	%st:enjoyment,pow:9
        c s: |
          But with plenty of slop.
        Riddiford	%day:1,time:900-1040
    
    
    t.Start = &{
        $cl = $('#'+'classes');
        cl.empty();
        cl = $('<ul></ul>').appendTo(cl)
        each ic t.group {
            $('<li></li>')
                .attr('id',c.id).text(c.t)
                .appendTo(cl);
        }
    };
    
    # etc.
    n Week -Week s:40hour
    
    G&yl:0.05,&s{ t.Start() };
    
    #
pi/Pupula: |
    $io = G&way,'iooia';
    ys&id = 'classes';
    
    n t 1 $s:C.t
    
    if (typeof s == 'string') {
        $uni = G&readLines,s;
        # now we have a university using C
        # make a few bits of csv since reality
        $tables = 3s&t;
        $ids = {};
        $everything = [];
        $insert = &type,s{
            $c = ex({},s.sc);
            c.type = type;
            
            s.y.cv != 0.1 and c.id = (s.y.cv+'').replace(/^0\./,'')
            else {
                ids[type] ||= 0;
                c.id = ids[type]++
            }
            
            c.t = s.t;
            sc&s and c.desc = sc&s
            everything.push(c);
            $table = tables[type] ||= {};
            table[c.id] = c;
            return c
        };
        # < io/S at many indent levels... call em ay,by,cy,dy...
        $ta = 3s&tables = {};
        $uni = G&Cye,['uni','','',{z:uni}];
        o $uni/:group/:class/:time
        io.nz().ind(&s,t{
            #debugger;
            ~Aye: t.ark, ki(s,2)
            t.ark == 'uni' and return
            $c = insert(t.ark,s);
            c.z = [];
            $up = t.parenting;
            up and up.z.push(c)
            return c
        });
        everything.map(&c{ c.z && !c.z.length && delete c.z });
        #n thing  $s:eny(tables) %ws:pre,dis:block
        #return
    }
    
    
    
    
pi/Week: |
    ys&dis = 'block';
    
    $map = '1,2,3,4,5x900-1700';
    s != '40hour' and throw "what kind of week is "+s
    
    
    

