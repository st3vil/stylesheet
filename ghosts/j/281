Clalia: | # drag n learn
    G&heading;
    # to make html+javascript that lives a life of its own
    
    n Classes -Class $s:<<''
    Engineering	4000
      seeing	439	%st:being,pow:24
        c s: |
          Lovely and sighted.
          Takes hold.
        Riddiford	%day:1,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340&1400-1450
      triangle	469	%st:geometrica,pow:12
        c s: |
          Bring togs.
        Riddiford	%day:4,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340&1400-1450
      weld	468	%st:geometrica,pow:9
        c s: |
          Ceramic?
        Riddiford	%day:1,time:900-1040
        Riddiford	%day:3,time:1300-1450
        Taxiderm	%day:2,time:1300-1340;1400-1450
    Art	8000
      weld	868	%st:enjoyment,pow:9
        c s: |
          But with plenty of slop.
        Riddiford	%day:1,time:900-1040
    
    # etc.
    n Week -Week s:40hour
pi/Class: |
    $io = G&way,'iooia';
    
    n t 1 $s:C.t
    
    if (typeof s == 'string') {
        $uni = G&readLines,s;
        # now we have a university using C
        # make a few bits of csv since reality
        $ids = {};
        $everything = [];
        $insert = &type,s{ #}
            $c = ex({},s.sc);
            c.t = s.t;
            c.id = s.y != 0.1 ? s.y.replace(/^0\./,'') : (ids[type] ||= 0)++;
            sc&s and c.desc = sc&s
            c.type = type;
            everything.push(c);
            (tables[type] ||= {})[c.id] = c;
            return c
        };
        # < io/S at many indent levels... call em ay,by,cy,dy...
        $ta = 3s&tables = {};
        
        each ig uni {
            $c = insert('group',g);
            c.z = c.z.map(&cla{
                $cla = insert('class',cla);
                cla.z = cla.z.map(&time{
                    return insert('time',time);
                });
                return class;
            });
            $gr = 3s&group[i] = ex({},g.sc);
            $z = gs&z; delete gs&z;
            each ic z {
                
            }
        }
    }
    
    $z = []; # things inside...
    if (s.constructor == Object) {
        # already are the thing...
        ss&z and z = ss&z
        $x = ex({},s.sc);
        delete ss&z;
        
    }
    else { z = s }
    
    each iv z {
        m $v.t -Class $s:v %ml:1em,dis:block
    }
pi/Week: |
    ys&dis = 'block';
    
    $map = '1,2,3,4,5x900-1700';
    s != '40hour' and throw "what kind of week is "+s
    
    
    

