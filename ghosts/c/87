recan: |
    u urw
    blag: %doo:sitandspin
        oi
uncan: |
    y.at.jslines = 1;
    blag 4: %js
        paper.project.clear();
Zoy: |
    #y.at.jsl = 1;
    Rw Sefara;
    my @hose = split /\s+/, 'Hit Hut StyleThroat styleomi stylation';
    `cd w/jw; rm -f @hose` if @hose;
    #n Hit
Vind: | # View boat / live generator / 
    u urw
    #n WE=>-sliT=>3=>'%dos:adh'
    # subvert the very simple J slower-downer
    # so per Vind, "time" advances enough to 
    G.oin.A.tid += 3;
    G.c.i = 1;
    
    J.koe++;
    
    # noise join wants to be:
    # c&de = 1.2 + z&dos;
    # z comsuming pass
    # inter sphere lowsis
    # hum
    my $i =
    c&de = 2.27;
    c&dont = 0;
    
    #J.food ||= <>;
    
    Rw sleep_if_hot;
    
    if (J.rem++ == 0) {
        saybl "wipe";
        n uncan
    }
    
    J.rem > 562 && exit;#Rw restar;
    
    
    # next timer
    my $d = c&de;
    Rw waito $J $d;
    
    n thing=>''=>(J.yon?"O":"8")=>'%dos:vinyon'
    c&dont = 1 if J.yon;
    
    return if c&dont;
    
    my $ba = G&peel,'pin:Tarp,for:486,oat:4,dea:2';
    my $f = "eye/thetalk/stop/sm";
    #n Tarp=>W=>{%$ba,oat=>4,or=>$f,pc=>{fite=>1},pic=>1,dod=>1,skip=>400}
    
    #n SoiTo=>W=>{%$ba,fu=>'eye/p/lllfater',pc=>{opam=>0.3,lino=>1}}
    n Syyy=>W=>{%$ba,fu=>'eye/Tarf',pic=>1,pc=>{fite=>1},dod=>1}
    
    #ba.hoW = 'io';
    #n Zeng=>W=>{%$ba,ic=>'Seng'}
    #n Zong=>W=>{%$ba,ic=>'Song'}
    
    #n Singe=>W=>{pin=>'Tarp',for=>420,oat=>2,dea=>2,fu=>'eye/io/i'}
    #n Singo=>W=>{pin=>'Tarp',for=>420,oat=>2,dea=>2,fu=>'eye/io/th'}
    
vinyon: |
    J.yon = !J.yon;
    
adh: |
    sayre "Y";
    saybl wdump 3, e&us
sleep_if_hot: |
    J.koe || die "Must J_koe to use";
    if (J.koe > 2) {
        my $h = {};
        my @l = `sensors`;
        for (@l) {
            my ($k,$v) = /^(Core 0|temp1):\s+\+(\d+)\./;
            $k || next;
            $k =~ s/\W//g;
            $k .= "2" while $h.>$k;
            $h.>$k = $v;
        }
        saybl "SEnse: ".ki $h;
        if (!keys %$h) {
            sayre "nonsense ".wdump \@l;
            c&dont = 1;
            c&de = 20;
        }
        if (grep{$h.>$_ > ('temp12'eq$_?88:84)}keys %$h) {
            sayre "Hot: ".ki $h;
            sleep 6;
            c&dont = 1;
            c&de = 35;
        }
        else {
            J.koe = 0;
        }
    }
    
TimeTape: | # r %int/ini attach sense of time
    my $t = J.Ti ||= {};
    if (c&for) {
        my $now = hitime();
        t.last ||= $now;
        t.now = $now;
        
        t.int = int((t.now - t.last)*10)*0.1;
        t.int = 12 if t.int > 12;
        
        t.ini = t.ini++;

        t.last = t.now;
        y.at.int = t.int;
        y.at.ini = t.ini++;
    }
    my $see = J.Wayout || "J.id\.c";
    !y.at.ini && J.Wayout && `cat /dev/null > life/W/J.Wayout`;
    c&atusc && !y.at.ini && G&wraf,"life/W/c&atusc\.sc",$see;
    # extents of time with a pour out at the end.
    # but does it unW?
    !c&for || y.at.ini < c&for;
    
    
Jig: | # a J.tea into J.slow ...
    my $n = J.name.'ig';
    J.slow = readlink("w/$n") || 0;
    J.slow += 1;
    J.slow -= 20 if J.slow > 30 && rand(10) > 9.8;
    J.slow = 0 if J.slow >= $lim;
    G&dlin,'w'=>J.slow=>$n;
Tarp: |
    u usr
    c&atusc = A.J.name;
    J.Wayout = "J.name\.c";
    my $dont = !
    Rw TimeTape;
    J.donts++ && return c&hoW && !J.leaveonce++ && do {
        my $io = c&hoW || 'io';
        my $in = "J.name\.sc";
        my ($la) = `tail -n 1 $io/W/$in` =~ /\.(\d+)\.c$/sm;
        my $ne = defined $la ? $la + 1 : 0;
        say "Done shift: $la, next $ne";
        my $ol = "J.name\.$ne\.c";
        `cp life/W/J.Wayout $io/W/$ol`;
        G&wraf,"$io/W/$in",$ol;
        say "Added $ol to $in in $io";
    } if $dont;
    
    J.VV.wave = 1;
    y.at.imgl = c&ic if c&ic;
    y.at.sq = 'wave';
    #y.at.dis = 0;
    J.iin++;
    J.oneto = 1 if J.oneto++ > 4;
    y.in = '0.3';
    y.in .= J.ititini++ if c&dod;
    #y.in += 0.03 if J.od++ && do{J.od=0;1};
    y.out = y.in;# + 0.3;
    
    # one more to clear ##
    $dont && return # doesnt work? ack Yuni
        n nosc=>''=>{}=>"%nosc"
    c&fu ||= c&or || 'io/i';
    if (!c&ic) {
        J.many ||= [do{
            my @n = grep {/^[\/\w\.-]+jpg$/i} split "\n", ''.`find c&fu -type f`;
            @n = shuffle @n if !c&or ;
            @n = sort @n if c&or ;
            if (c&skip) {
                shift @n for 1.. c&skip ;
            }
            @n
        }];
    }
    c&oat ||= 4;
    my @for = (1..c&oat);
    J.indear = c&dea || 2;
    J.tr->{$_} eq 'nothere' && delete J.tr->{$_} for @for;
    #y.ope = 1;
    if (0&& c&or) {
        J.tr = {};
    }
    elsif (J.at.ini > J.indea) {
        #delete y.ope;
        #n unify=>''=>{}=>'%rasu:4,pa:R,fit,opa:0.7,elie:4,sca:0.9'
        
        for (1 .. (c&den || 1)) {# last;
            J.indei ||= 0;
            my $di = $for[J.indei];
            $_ eq '1' && acu $J=>indres=>J.tr->{$di};
            J.tr->{$di} = 'nothere';
            J.indei++;
            J.indei = 0 if J.indei > @for;
        }
        
        J.indea = J.at.ini + J.indear;
        return J.tr = {};
    }
    J.tr->{$_} ||= shift(@{J.indres||[]})
        ||
        c&ic ? J.ite++ : # stitches into image list
        J.many->[J.ite++]
         for @for;
    J.ite = 0 if J.many && J.ite > @{J.many};
    
    my $i = 0;
    while (@for) {
        my $sc = {};
        my $n = shift @for;
        my $src = J.tr->{$n};
        $src eq 'nothere' && next;
        
        if (c&ic) {
            sc.I = $src;
        }
        else {
            sc.src = $src;
        }
        next if sc.src =~ /^\d+$/;
        if (!c&pc && @for<3) {
            sc.deal = 0.6;
            #sc.tism = sprintf '%s_%s_%06d', J.name, slm(4,G.oin.id), J.iini++;
            #sc.tism .= '_'.$i if $i;
        }
        my $c = c&pc || {};
        m $n=>''=>{pi=>'pape',%$c},$sc
        $i++;
    }
    if (c&pic) {
        my $i = sprintf '%s_%s_%06d', J.name, slm(4,G.oin.id), J.iini++;
        n phot=>'8'.int(rand 50)=>{}=>{tism=>$i,deal=>0.4}
    }
    #d#elete J.El.>$_ for Pre=>'Duv';
    
    shift @$M while @$M > 8;
    J.AM = [@$M];
pi/pape: |
    C&pa = 'R';
    C&qz = 1;
    c&thumb ||= C.t unless C&src || C&I || length(C.t) < 4;
    c&thumb &&
    Rw pi/thumb + $s:c&thumb;
    #delete C&I if C&I;
    
    if (J.ini++) {
        my $otv = J.Jiter.El.Pre.tv;
        my $be = $otv->{C.y.cv."\t".C.t};
        my $ws = J.wasc ||={};
        G&xot,$ws,be.sc;
        y.ope = 1;
        
        return if c&fite || c&noa;
        #return if 3 > rand 8;
        
        #C&sca = ws.sca + 0.1 if ws.sca;
        for (qw'sca opa pxp pyp r') {
            next;
            C.sc.>$_ = $ws->{$_} * 1.02 if $ws->{$_};
        }
        for (qw'sca r opa') {
            C.sc.>$_ = $ws->{$_} * 1.12 if $ws->{$_};
        }
        
        #3 > rand 5 &&
            Rw pap_b;
        
        #3 > rand 5 ||
        return;
    }
    my ($no,$i,$se) = ($1,$2,$3)
        if `uptime` =~ /([\d\.]+), ([\d\.]+), ([\d\.]+)/;
    my $fo = $no - $i;
    #
    #C.sc.src || sayre "no src..";
    delete C&src if 'th/'.C.t eq C&src;
    
    C&fit = 1;
    
    return if c&fito;
    Rw pap_b;
    my $tdig = $1 if C.t =~ /^(\d+)$/;
    C&b = 'normal' if $tdig eq '1';
    if (c&fite) {
        C&opa = 0.6 * (0.5 + rand 0.9) if $tdig > 1;
        return;
    }
    
    #return if J.mo.J.C.c.or;
    C&pxp = 270 * (rand(2)-1);
    C&pyp = 270 * (rand(2)-1);
    map { C.sc.>$_ * 0.3 if C.sc.>$_ > 100 } qw'pxp pyp';
    
    C&sca = 3.421 * rand(3);
    #C.sc.zm = int(rand 10);
    C.sc.sca += 2;
    C&sca *= 0.3 until C&sca < 4.3;
    C&sca *= 1.4;
    C&opa = 0.6 * (0.5 + rand 0.9);
    C&opa *= c&opam if c&opam;
    
    
    Rw pap_b;
    C&b = 'normal' if C.t =~ /^[1]/;
    
    C&r = int(700 * $fo) unless c&rot;
    if (c&rot eq 'ends') {
        C&r = 180 if 4 < rand 5;
    }
    C&pxp = int C&pxp if C&pxp;
    C&pyp = int C&pyp if C&pyp;
    C.sc->{$_} = G&ron,C.sc->{$_}
        for grep{C.sc->{$_} =~ /^[\d\.]+$/} keys %{C.sc};
    
pap_b: |
    my @op = (
    0 ? (qw'normal normal color-burn add multiply')
    : (
    #'negation',# 'source-over', 'source-in',
    #'source-out',    #'source-atop',
    #'darken', 'lighten',
    #'color-dodge', 'color-burn',
    #'normal', 'normal',
    #'exclusion',
    #'hue', 'saturation',# 'saturation',# 'saturation', 'saturation',# 'luminosity',
    # 'color', 'add', 'subtract',
    # 'color', 'add',# 'subtract','subtract','subtract',
    ##'normal', 'normal', 'normal', 'normal', 'normal', 
    #'color-dodge','multiply',, #'multiply',, 'multiply',, 'multiply',,
    # 'multiply', 'screen', 'overlay', 'soft-light', 
    #hard-light', # 'darken',
    #'lighten',
    # 'pin-light', 'pin-light', 'pin-light', #
    #'difference',
    'add',
    #'soft-light',
    #'pin-light',
    #'difference',
    'difference',
    #'exclusion', #'hue', 'saturation', 'luminosity', 'color', 'add', 'subtract'
    , 'average', 'pin-light', 'negation', 'source-over', 'source-in', 'source-out', 'source-atop', 'destination-over', 'destination-in', 'destination-out', 'destination-atop', 'lighter', 'darker', 'copy', 
    #'darker'
    )
    );
    if (c&lino) {
        @op = ('normal', 'normal','difference');
    }
    C&b = (shuffle @op)[0];
Sjum: | # make nice js line protocol
    u urw
    delete J.El.>$_ for qw'Duv Pre';
    J.VV.N = 1;
    n GW
    y.at.jslines = 1;
    
    ngo: %js
        var s = "\n\n\n";
        var M = [
                     s.split("\n")
        ];
        console.log($('ndkon'),  M);
Alsi: | # surf the web
    u urw
    J.VV.N=1;
    # http://st33v.tumblr.com/
    my $r = 'paperjs/examples';
    my @m = grep{s/^public\///;/html$/}
        split "\n", ''.`find public/$r -type f`;
    my ($in) = shuffle @m;
    (my $o = $in) =~ s/^$r\/(.+)\/(.+)\.html$/$1 $2/;
    n in=>1=>$o
    n $o=>2=>{pi=>'ifor',s=>$in}
    
pi/ifor: |
    n if=>2=>''=>"%ifr:$s,he:30em" 
stylepap: | 
    u alljse
    # set a W's image source
    imgl 334:
        A.mo.b.imgl = s;
    # shorter rasunify
    rasu 334:
        with (paper) {
            var h = $('canvas#display').get()[0];
            C&src = h.toDataURL('image/jpeg');
            s >= 2 and paper.project.clear();
            a.yl(300, &{
                a.om(A.om,C,a,{});
            });
            T.not = 1;
        }
    # take some photo
    tism 36:
        a.yl(140, &{
        var h = $('canvas#display').get()[0];
        var m = h.toDataURL('image/jpeg');
        $.ajax({url: '/tism?g='+s,type: 'PUT',data: m});
        });
    
    0&&
    notism:
        $('body').append('<a id="tism" download="ti_'+s+'_sm.jpg">o</a>');
        var l = $('body > a#tism:last');
        l.attr('href',m);
        l.click();
        //$('body > a#tism:last').remove();
        var ov = $('body > a#tism').length;
        while (ov > 99) {
            $('body > a#tism:first').remove();
            ov--;
        }
    
    pa 34:
        with (paper) {
            var src;
            var r;
            C&typ ||= 'R';
            !(c&el <3) and r = A.b.pa; !r && a.c("no rasmeemmber "+C.t);
            else if (C&typ === 'R') {
                C&src and src = C&src;
                if (!src && C.t.length < 4) {
                    $igl = A.mo.b.imgl;
                    igl ||= 'Song';
                    A.mo.b.iml ||= {};
                    C&I and src = A.mo.b.iml[C&I];
                    src ||= G&pull,igl;
                    src ||= G&pull,igl;
                    C&I and A.mo.b.iml[C&I] = src;
                }
                src ||= 'th/'+C.t;
                if (!src) {
                    C&jfi ||= 'img';
                    var find = $(C&jfi);
                    !find.length and a.c('no find '+C&jfi);
                    src = $(find).last().attr('src');
                }
                r = new Raster({
                    crossOrigin: 'anonymous',
                    source: src
                });
            } 
            else if (C&typ === 'T') {
                r = new PointText(view.center);
                r.fillColor = 'white';
                r.justification = 'center';
            }
            if (C&typ==='T') {
                c&s and r.content = c&s;
                c&el <3 && !C&fs and C&fs = '30';
                C&fs and r.fontSize = C&fs;
            }
            C&src && C&src != r.image.src and r.image.src = C&src;
            C&an && a.uplg and n = r.animate(C&an, a.uplg);
            c&el <3 and r.position = view.center;
            C&fit and r.fitBounds(view.bounds, true);
            C&pxp and r.position.x += C&pxp;
            C&pyp and r.position.y += C&pyp;
            C&sca = C&sca + (1 / (r.image.width / 1200));
            C&sca and r.scale = C&sca;
            C&b and r.blendMode = C&b;
            C&r and r.rotate(C&r);
            C&opa and r.opacity = C&opa;
            C&elie and c&el = C&elie;
            !A.W and ~die~panoW: A
            A.W ||= {};
            if (c&el <3) {
                var ha = C&typ+'s';
                var ar = C&typ+'z';
                A.W[ha] ||= {};
                A.W[ha][C.t] = r;
                A.W[ar] ||= [];
                var raz = A.W[ar];
                raz.push(r);
                if (0) {
                    raz.length > 5 and G&rasunify,raz
                }
                else {
                    a.lim(raz,9, &r{
                        delete A.W.Rs[r.Ct];
                        r.remove();
                    });
                }
                r.Ct = C.t;
                r.omily = 1;
                r.alive = 1;
            }
            if (c&el == '9') {
                r.omily and delete r.alive
                else { r.remove() }
            }
            ~pa: C.t, C.y.cv, a.ks(C.sc)
            A.b.pa = r;
        }
    u alljs
    #
    # lose-your-s h&$s callback, absorbs many into one call
    Time:
        A.W.Time ||= {};
        var i = A.W.Time;
        i[s] == 2 and delete i[s]; return 1
        i[s] and return 0
        i[s] = 1;
        a.yl(d, &{
            i[s] = 2;
            G&$s
        });
        return 0
    
    # rassimilato
    # needs to put in background and do before dealings
    # maybe the Cs become for compression somehow
    
    rasunify:
        s and A.mo.rasgo = s;
        !G&Time,'rasunify',700 and return
        s ||= A.mo.rasgo;
    
        var de = [];
        var li = [];
        $.each(s, &i,r{
            r.alive and li.push(r)
            else { de.push(r) }
        });
        while (li.length > 9) {
            ~liingot
            de.push(li.shift());
        }
        if (0) {
        $.each(li, &i,r{ r.liopacity = r.opacity; r.opacity = 0 });
        var m = s[0].canvas.toDataURL('image/jpeg');
        $.each(de, &i,r{ r.remove() });
        $.each(li, &i,r{ r.opacity = r.liopacity; delete r.liopacity });
    
        a.om(A.up,['cmb',9,{el:2},{src:m,pa:'R'}],a,{});
        }
    
        s.splice(0,s.length);
        $.each(li, &i,r{ s.push(r) });
        var go = &i,r{
            delete A.W.Rs[r.Ct];
            r.remove();
        };
        $.each(de, go);
        var rzl = s.length;
        while (rzl > 9) {
            var v = s.shift();
            ~rasquishout: v
            go(1,v);
            rzl--;
        }
    

