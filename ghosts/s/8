ElvisElvises: | # J e J,
    my $t = Rw Telvis;
    # your mo .e 
    # the J minded of=E awaken/resolve options
    # calls handlers or the pin to find handlers or handle as pin
    # handlers register into E (may want to J.ii only u wave '' or so)
    # handling e vars (via e&st -> G&e,'st', etc) tickles clues to pin
    if ($n == 0) {
        c&te =
        n Elviseso
        t.cs->('sc lastK c s','source');
        t.cs->('sc lastA 1?!','J');
    }
Elviseso: |
    n ElBridge
ElVerse: | # hyperactive With
    u i
    # describe A net and e
    es:
        G&sn .": ".ki c&e;
    # etc
        
ElBridge: | # mo Talk happening
    u alc
    # how the web works
    # heaven's above me on a street called love
    # J must make known elvising to use .e hooks to answer calls
    
    # elvising
    e 12:
        sayre "Havelvis: A.1.t -> C.t C.y.cv: e.t";
        A&E = G&tugA,E=>1,$e;
        # tug E
    
    # on regular visits
    J 344: %t:ce:!
        # if ! e and ev.amb && that
        Rw J.ev.amb $J if J.ev.amb;
    
    # elvising with J
    e 344:
        my $oJ = A.2;
        my $J = A.1;
        $J eq $oJ && die "Elvising same: ".G&sn;
        # may not have mind yet,
        # waylay the way in until we do
    
    # three ways in to E:
    # - 36: before/without pin (J has itself)
    # - 63211: within pin at time2 (J becomes)
    #      allowing J completion with th(e)m in one
    # - 67: after pin (J becomes)
    #       T.oke to force J redoing
    #     T.pos = 0 to waylay J redoing
    
    # ^ points to try and advance of=E
    
    # handlers include stuff in of=E
    #  - pin could make handler subs
    #  - pin could always happen, chews e itself
    #      probe if nothing uses eg e&_z
    
    # pre-4 effect
    e 36:
        my $J = A.1;
        Rw hevt $J e36;
        if (T.oke) {
            # meaning head in to pin
            # & later dont ground the C on oJ...
            # A.ztime = 6;
            return say "Tanking into J.t";
        }
        # come back if T.pos (default 1)
        Rw waito $J $C if T.pos || !defined T.pos;
    
    # in pin time2/at mind resolve effect
    # can skip out of pin if !T.pos
    J 63211:
        # setup interface to:
        # S maybesomething
        # like Atime(2) || return # piece S now, like u/n/m/T
        #   return if T.pos == 0, def 1, that vector no osc
        #   used to c&e = delete c&elv;
            Rw hevt $J elv2;
            T.pos = 1 unless defined T.pos;
    
    # post pin pre osc
    # not if e suspended in elv until mind
    # tries to tug E up
    e 76:
        C.c.e = delete C.c.elv;
        .
        Rw hevt $J elv76;
        .
        if (T.oke) {
            die "76 thoughtself J.name" if A.J eq $J;
            say "Tanking 76 into J.name";
            Rw waited $J;
            return;
        }
        T.pos = 1 unless defined T.pos;
        T.pos &&
            Rw waito $J $C;
    
ElChorus: | # joins you
    u alact
    # where v is for c&e
    # Js&ein - e matching
    e 1:
        1s&ein 
    
e: | # for elvis protocols
    n alact
    e 4223: %acgt:s,act,of:mo
        # make their v for .c.e
        # and various expand to shape pieces of server/etc protocols
        s&of ||= 'E';
    
ElvisHoists: | # J uphoist any {{{
    my $t = Rw Telvis;
    # J.sc.X fishtail connection, index clues needed, or eg co
    # see pud re T
    

