Vindego: |
    my $en = $0;
    map { rand 3 } 1..$1 while $en =~ s/(\d+)//;
    while (1) {
        J.koe++;
        c&de = 2.27;
        c&dont = 0;
        Rw sleep_if_hot;
        Js&bowls++;
        sayyl "Samb Js&bowls > c&loop";
        T.done = Js&bowls > c&loop;
        J.rem++ == 0 && 1 &&
            n uncan
        c&dont ||
            n Vinding
        last if delete T.done;
        saygr "Doing";
        sleep 5 + c&de;
    }
Vinding: |
    Jc&tape = 'Dejo';
    y.imp++;
    c&lim = 200;
    n sa=>''=>"Ham: $0"
    
    my $i = Js&bowls++;
    my $on = Js&M ||= Rw TheVin;
    my $off = Js&oM ||= [];
    my @got;
    for (1..3) {
        @$on = @$off if !@$on;
        my $n = shift @$on;
        push @$off, $n;
        my $sc;
        sc.src = $n;
        #sc.deal = 3.1 if $_ == 3;
        sc.b = $_ == 1 ? 'normal':'difference';
        my $c = c&pc || {};
        n $_.$i=>''=>{pi=>'pape',%$c,lino=>1,rot=>'ends'},$sc
    }
    if (c&pic || 1) {
        my $i = sprintf '%s_%s_%06d', J.t, slm(4,G.oin.id), Js&iini++;
        n phot=>'8'=>{}=>{tism=>$i}
        #;,deal=>0.4}
    }
    n hada=>''=>ada
TheVin: | # art source patchbay
    my @im;
    c&do = 'ls -1t';
    c&unl = 1 if !defined c&unl;
    my @l = split "\n", c&s || <<'';
        sc/DT/2017_01_30
        x/Downloads
    for (@l) {
        c&s = $_;
        my $C = G&hup,$C;
        my $m =
            Rw Chunkfall;
        push @im, @$m;
    }
    @im = shuffle @im unless c&nosh;
    for (0..@im-1) {
        next if $_ % 3 > 0.4;
        next if $_ > @im - 16;
        (@im[$_..$_+3], $im[$_+6], @im[$_+12..$_+15], $im[$_+9])
        =
        (@im[-$_+12..-$_+15], $im[-$_+9], @im[-$_..-$_+3], $im[-$_+6])
    }
    \@im;
Chunkfall: | # image list
    c&only = 'images';
    c&s ||= 'eye/Tarf/Photo_serieses';
    my @imgs = Rw Exe;
    if (J.t eq 'Chunkfall') {
        for (@imgs) {
            my $t = $1 if /^c&s\/(.+)$/;
            m $t=>''=>{s=>$_}
        }
    }
    else {
        return \@imgs
    }
    
Photon: |
    Jc&tape = 'Dejo';
    ####
    n Chunkfall=>W=>{grep=>'t'}
    my @le = G&op;
    y.at.hue = 30 * Js&Bowls++;
    my $h = hitime();
    
    n le=>-pud_3=>{dl=>3,s=>\@le};
    
    my $d = G&ron,hitime()-$h;
    n delta=>4=>"Took $d",'dis:1'
Ayer: |
    for (1..5) {
        n Ayee
        last;
        sleep 7;
    }
Ayee: |
    Jc&tape = 'Dejo';
    c&s = 'x/art';
    y.at.ml = '-40%';
    Js&images ||= Rw TheVin;
    Js&bowls++;
    y.at.con = 8;
    y.at.tag = 'marquee';
    y.at.wi = 8;
    y.at.over = 'hidden';
    
    my $thy = 0.4;
    my $up = 0.5;
    my $exp = 1 + (0.7 * Js&bowls);
    my (@up,@n,@u);
    for (@{Js&images}) {
        m awa=>{thy=>$thy}=>{}=>{tag=>'img',src=>$_}
        $thy += $up;
        $up *= $exp;
        if (@up > 5) {
            if (!@n) {
                @n = @up;
                pop @n;
            }
            if (@u) {
                $thy = shift @u;
            }
            else {
                $thy = pop @n;
                if (!@n) {
                    @u = @up;
                    rand 3 > 2 &&
                    m n=>''=>"\n"
                }
            }
        }
        else {
            push @up, $thy
        }
        last if @$M > 55;
    }
    y.mod = &M{
        map {
            _s&he = _.y.spc * 20 * 4;
            _s&wi = 2;
        }grep{_s&src} @$M
    }
    
    
Flips: | # make stopmotion movies
    # wants many S-ections to break down the job, do status
    # to travel the main processing loop out of time
    Jc&tape = 'Dejo';
    c&s = 'sc/DT/2017_01_31';
    c&unl = 1;
    c&nosh = 1;
    Js&images ||= Rw TheVin;
    my $las;
    my $i = 0;
    my $d = 'sc/Flips';
    if (!-d $d) {
        `mkdir $d`;
        my $la;
        for my $o (@{Js&images}) {
            my $s = -s $o;
            next if !$s || $s eq $las;
            $las = $s;
            for (1..3) {
                my $f = "$d/a_".sprintf('%04d',$i++).".jpg";
                if ($la && $_ <3) {
                    my $pc = $_ * 33;
                    `composite $la $o -blend $pc $f`;
                }
                else {
                    $la = $o;
                    `cp $o $f`;
                }
                $la = $f;
                $i % 40 || saygr "... copied $f";
            }
            #last if $i > 100;
        }
    }
    my $v = "it";
    $v .= ".mp4";
    if (!-f "$d/$v") {
        sayre "Encoding";
        my $sh = '.jpg';
        `cd $d; ffmpeg -i a_%4d$sh -vcodec mpeg4 -b:v 8000k -s 1280x720 $v`;
    }
    n t=>""=>"Som C.t"
    
    n vi=>-video_2=>{s=>"x/$d/$v"}
    
    
Tunes: | # see time?
    Jc&tape = 'Dejo';
    y.at.fs = 38;
    my $i = Js&bowls++;
    for (0..$i) {
        n "3$_"=>6 + $_ ^ 3=>"Satch",'%hs:696'
        n "2$_"=>3 + $_ ^ 2=>"$_",'%hs:398'
    }
Ritim: | # play that
    Jc&tape = 'Dejo';
    my $t = '03';
    my $d = "x/art";
    my ($f) = glob "$d/$t*";
    $f || return
        n err=>1=>"No $t in $d"
    
    my $c = {};
    c.seek = 123 if Js&bowls++;
    c.s = $f;
    n $t=>-med=>$c
    
    #
pi/med: | # media to play
    y.at.qs = 1;
    n t=>1=>C.t,'%ab,fs:40,hs:837,top:30%';
    
    my $vid = '<video width="900" autoplay controls><source src="'.$s.'"></video>';
    
    m sat=>-slid_12
    seeker 11: %e
        a.sook = function(e) {
            var v = $(A.on).find('video').get(0);
            a.m('@ ',v.currentTime);
        }
    sook 5: %on:c:sook
        currentTime

    n s=>6=>$vid,'%ht,ml:-50%,zi:-34,tra:3 40';
    
    c&seek &&
    seek 7: %e,seek:c&seek
        a.yl(300, function(){
            console.log('qyua');
            var v = $(A.on).find('video').get(0);
            v.currentTime = C.sc.seek;
        });
        

