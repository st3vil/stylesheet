Luca: | # ghost -> wormhole flame thrower
    Jc&tape = 'Dejo';
    
    Rw Hutter $cb:_ for &{
        T.ha.H = 5;
        T.H = 5; # store
        n Sequa
    };
    my @la = G&op,'sW:';
    #my $tw = T.op.y.tw;
    n Sequa=>-xofor
    n Day=>-xofor
    m vers =>''=>"_.t: _s&J.c.o" for @la;
    
Lize: | # watch ghost/wormhole watcher
    Jc&tape = 'Dejo';
    # see stylehouse openness 
    #n Besider
    my $ch = 'Z';
    my $d = "G.c.bay/$ch";
    my $pat = "$d/*/xo";
    Rw SlowIn $t=xos $at:pat;
    S
    n sq=>1=>"Lies of $d"
    
    d:
        lies good
    
SlowIn: |
    my $lim = 4;
    C: my $c;
    c.do = 'ls -1ct';
    c.lim = $lim;
    c.s = $at;
    my $C = G&Ct,[C.t=>''=>$c];
    # or: $C = C C.t $lim $s:at
    my @im = Rw Exe;
    n anMe=>-pud=>{s=>\@im}
    
Sequa: |
    
    T.H = 4;
    n To
    n Day
    n Spells
    n Tube
Man: |
    sayre "Was";
    
    
    1 &&
    u lac
    sayre "Dioe";
    n lac=>''=>"Lac"
    Jc&tape = 'Dejo';
    #S
    n WashIn
    G&lac;
    n some=>''=>"!tiow!"
    my $t = "Source of ".(T.op && T.op.t || '?');
    my @l = G&op;
    n $t =>-pud=>{s=>\@l}
lac: | # for 3 C
    u i
    lac:
        # TODO babz T.op|t
        my $t = $s || T.op && T.op.t;
        my @l = G&op;
        n $t =>-pud=>{s=>\@l}
    
WashIn: |
    u pisle
    #Jc&tape = 'Dejo';
    S
    n dev=>-watch=>"mmcblk0"=>'%T:s'
    S
    sayre "Next thing!";
    
pi/watch: |
    c&type ||= C.t;
    my $f = c&type eq 'dev' ? "/dev/c&s" : die "typeno";
    s&done = 1 if -e $f;
    s&todo = 1 unless s&done;
    
pisle: | # act for streaming piles
    u i
    # see the entered thing
    # should still the mind
    # enstate a frame for I
    Sle:
        G&co:"A.1.t ticks $s";
    co:
        push @{4s&co||=[]}, [Gc&B,$s,@Me];
        
Spec: |
    Jc&tape = 'Dejo';
    my $t = 'pisle';
    T.H = 4;
    n $t
    my @l = G&op;
    n $t=>-pud=>{s=>\@l}
    n Ghostig
    

