
Opper: | # consolidato
    Js&bowls++ ||
        Rw GhosMe;
    # receive W and switch through same telephone wire
    n Baye
    #return;
    snooze 222;
    n Fish
    n Opera
Opera: | # put instructions together
    Rw Tiot;
    
    m Udder=>-comtu=>DoSomi
    m DoSomi=>-comtu=>ReSim
pi/comtu: |
    
    my $d = G.c.bay."/p";
    my $pid = readlink "$d/C.t";
    G&always,J.sc,atpid=>$pid ||
        n pidchange=>1=>"pidchange",'%hs:666'
    n am=>1=>"d"
    n t=>2=>C.t
    
    
    Js&ope == Js&bowls || return;
    Js&bowls++;
    my $in = "$d/$pid/in";
    my $s = G&Ct,[c&s=>'W'];
    write_file($in,{append=>1},sjson($s)."\n");
Fish: | # infinite plantulism
    Rw Tiot;
    # e receives a new G Ting
    # is their leader/his left-over intelligence
    # starts before everything, with the one thing to do
    # which is watch, scrub, and attract attention
    # dig in hole hath set me free
    
    # answer requests for its detail
    Js&ein.t.p = &TesCA{
        my $pid = e&s || c&e.c.s;
        1 && say "    Looking far $pid";
        my @fo = G&op,"pid:$pid";
        if (!@fo) {
            T.rep && return G&vent,"Stillno:pid:$pid";
            return T.pos = 3;
        }
        G&xo,e.sc,_.sc for $fo[0];
        T.pos = '';
    };
    S
    # toplevels 4t
    y.at.bg = '3484';
    c&s = G.c.bay.'/p';
    c&do = 'ls -1t';
    n for=>''=>c&s
    my @im = Rw Exe;
    my @pi = grep {-d && !-l} @im;
    my $tp;
    $tp.>$_ =1 for grep {-l} @im;
    
    m $_=>-proc for @pi;
    sayyl "Fishes ... ";
    n Ilan=>V
    T.op || return;
    return;
    my @o = G&op;
    @o = map { G&Ct,[_.t,_.y.cv,{s=>sc&s}] } @o;
        G&give,Toter=>s=>\@o;
    #n Twang
pi/proc: | # picture in picture rock
    my ($d,$p) = $s =~ /^(.+)\/p\/(\d+)$/;
    $p || return
        n err=>6=>"No pid: $p",'%hs:254'
    y.at.dis = 3;
    y.at.dos = 'Continues';
    
    my $so = read_file("$s/so");
    my @lives = split ' ', $so;
    my $it = pop @lives;
    $so = join ' ', (map{/^(\d+)/}@lives), $it;
    s&so = $so;
    Rw Thrext so;
    n spc=>12=>' '
    
    n pid=>2=>$p,'%fs:7,hs:256'
    s&pid = $p;
    
    -e "/proc/$p" || return
        n gone=>2=>'*'=>'%hs:856'
    #n spc=>31=>' '
        
    
    my $pa = read_file("$s/pa");
    n pa=>32=>{s=>$pa}=>'%hs:576'
    s&pa = $pa;
    -e "$d/p/$pa" || return
        n gone=>322=>'?'=>'%hs:856'
    
    
    
    Js&ope || return;
    
Thrext: |
    my $k = ar.m->[0];
    my ($num,$name) = split ':', C.sc.>$k;
    n sip=>o9=>$num=>'%fs:7'
    n col=>o95=>':','%hs:489,fs:6'
    if (my $nt = ar.next_t) {
        return if $name eq $nt;
    }
    n t=>1=>$name=>'%fs:12'
    
Ilan: | # O's zip of U, W switchup
    # & tractor e into a new Udder
    y.res = 1;
    Jc&refit_t = &C{
        "s&so C.t"
    };
    Js&ein.t.f.sMJ = &sMJjeTCA{
        if ($s =~ m{(.+)/p/(\d+)/W/(\w+)\.(\d+)}) {
            my ($d,$p,$t,$i) = ($1,$2,$3,$4);
            my $in = Js&index ||= {};
            my $new;
            my $C = $in.>$t.>$p ||= do { $new++; {y=>{}} };
            C.t ||= $t;
            C.c.pi ||= 'plaz';
            s&pid = $p;
            s&ie = $i;
            
            Rw Rebase $C $d $p $t $i;
            
            return unless $new;
            
            # try to find pid in Fish
            s&so ||= do {
                my $p = G&Ct,[p=>''=>$p];
                G&elph,Fish=>[$p];
                ps&so;
            };
            if (my $za = C.y.moC) {
                G&give,Toter=>s=>$za
            }
            #n ro=>-pud=>{s=>[[G&op ]]}

            $new && push @$M, $C;
        }
        else {
            die "Other Ilan ting: $s";
        }
    };
    Rw Tiot;
    S
    m $_ for @{Js&M||[]};
    _s&anew.C = $_ for @$M;
pi/plaz: |
    y.at.dis = 3;
    y.at.dos = 'Continues';
    
    Rw Thrext so $next_t=C.t;
    
    n t=>2=>C.t=>'%hs:555,fs:18'
    
    s&ie &&
    n ie=>0.22=>{s=>".s&ie"},'%fs:12,hs:258'
    
    my $z = delete s&zin || return;
    Js&ison ||= 3;
    my $dis = Js&ope >= 0 ? 3 : 0;
    n z=>6=>{}=>{zout=>$z,dis=>$dis} 
DoSomi: |
    Jc&tape = 'Dejo';
    thing:
        is
    n eo=>2=>"s $0",'%hs:774'
    m $_ for @{c&ex||[]};
    sayre "Is thing";
ReSim: |
    my $M = [];
    m Tangle=>3=>Twangiola
    m Tungle=>4=>Topova
    n DoSomi=>W=>{ex=>$M};
    n Not=>1=>I
Continues: | # reactiona
    my $p = e&_hJ;
    ps&ope += us&S ? -1 : 1;
    
GhosMe: | # for ghoster ups
    n Waytch
    5s&desi = "Ghoster";
    

