Opera: | # put instructions together
    Rw Tiot;
    Rw Elationist;
    if (my $i = Jc&es) { # holds a pid to apply lying around things to
        is&so ||= do {
            my $p = G&Ct,[p=>''=>i.c.s];
            G&elph,Fish=>[$p];
            ps&so
        };
        n for=>1=>"-> is&so",'%hs:756'
        #m Ghostig=>-comtu=>Ghostig
    }
    #$i
    Js&eM = do {
        my $M = [];
        my @l = split "\n", <<'';
            Udder:Stuvv asap
            Udder:Waits
            Stuvv:Ghostig
        0 && <<'';
            Udder:Twang
            Udder:DoSomi asap
            Udder:ElvisMe
            :Donot
            :Dopud
            :Chase
        0 && <<'';
            Udder:Blinks asap
            Blinks:Dopud asap
            :Chase
        0 && <<'';
            Udder:DoSomi asap
            Udder:Calg
            DoSomi:ReSim
            Calg
            Calg:Dopud
        for my $l (@l) {
            my ($t,$c) = split ' ',$l;
            $c = G&peel,$c;
            m $t=>-comtu=>{%$c}
        }
        $M
    };
    m $_ for @{Js&eM||[]}, @{Js&M};
    y.res = 1;
    @{Js&M} = grep {!_c&oncer} @{Js&M};
    
Stuvv: |
    Jc&tape = 'Dejo';
    my $h = hitime();
    local A.4.t = 'Z';
    T.H = 4;
    n ElBridge
    my @dm = G&op;
    #
    #
    my $d = G&ron,hitime()-$h;
    n delta=>3=>"Took $d"
    my $o = G&A,o=>6,$J,\@dm,'producto';
    
    n ElBridge=>-pud=>{s=>oc&rsl}
    
Waits: | # ghost pusher
    Jc&tape = 'Dejo';
    # etc
    #
    #
    n Waytch
    5s&desi = "Waits";
    say "Udoffi";
    
    T.oT.Uddoff = 1;
    n cee=>-pud=>{s=>$C}

