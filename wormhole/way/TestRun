u allvse
n \'of:Mo'

runs 2:
    my $J = A.J;
    J.tests && return;
    use Test::More 'no_plan';
    J.tests ||= {};

test 2:
    $test =~ /^(\d+) (.+)$/ || return;
    C.c.test = $1;
    C.sc.l = $2;

# in J's C.t's $test 
test 21:
    my $J = A.J;
    J.testsRun++;
    my $ts = J.tests||die'suhpetsts';
    my $f = C.c.tfile = join '/', 't', J.name, C.t, $test;
    my $its = $ts->{$f} ||= {};
    its.i++;

    its.is->{its.i} && die'alelee';
    my $st = its.is->{its.i} = {};
    st.ts = $ts;

    my $is = -f C.c.tfile;
    ok($is, "td: C.c.tfile");
    st.exp = LoadFile(C.c.tfile) if $is;
    C.c.st = $st;

    my $min = " (ts.i)" if ts.i > 1;
    ok(its.i, "$f begins");

test 3:
    my $J = A.J;
    if (my $mks = J.C.c.mks) {
        C.c.s = $mks->($C);
    }

n noJ =>222,<<''
    delete A.Iso.oJ;

n test =>76,<<''
    my $s;
    if (exists c&J) {
        ok(ref C.c.J, "C.t $test: J is alive");
        is(C.c.J, C.sc.J, "in two places");
        .
        my $rv = C.c.J.El.Duv.rv;
        ok(ref $rv, "rv is alive");
        .
        $s = I.d&testNews,'Duv';
    }
    else {
        # just the testNews detail blur
        $s = G&muteNews,c&s;
    }
    my $l = C.sc.l || "Wheels of chaos";
    I.d&eeply,$s,$_
        for "C.t $test: $l";

n tac =>769,<<''
    I.d&taccept;
