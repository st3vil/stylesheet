NutJay	9	Jo:1.1
  n	001	W:javascript
    n			{"acgt":"s","act":"1","any":"1","coded":"1","dige":"3327fdf4d9a7","js":"n","v":"cn","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        A.n = A;
        C.y.A = C.y.A || A;
        if (C.y.A != A) {
            {var er = new Error("wild C"); er.tc = [C]; throw er}
        }
        if (A.c.nogro) {
            return
        }
        var g = A.ground;
        if (!g) {
            return;
        }
        g.sc.z = g.sc.z || [];
        g.sc.z.push(C);
        //~grounds: A[1].t, C.t
        
        };
    V	11		{"acgt":"s","act":"1","coded":"1","dige":"2f7deb67cc72","gk":"V","js":"n","nk":"c","v":"cV","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        C.c.W = s;
        A.c.twotoeight = 1;
        
        };
    pi	12		{"acgt":"s","act":"1","coded":"1","dige":"5ff04f807721","gk":"pi","js":"n","nk":"c","v":"cpi","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        if (!s) {
            {var er = new Error("Give pi"); er.tc = [C]; throw er}
        }
        C.c.J = "pi/"+s;
        A.c.way = 'way';
        
        };
    W	12		{"acgt":"s","act":"1","coded":"1","dige":"8fbbf8055da4","gk":"W","js":"n","nk":"c","v":"cW","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        if (!s || s == '1') {
            s = C.c.W = C.t;
        }
        if (typeof s != 'string') {
            throw 'ref cW', C
        }
        if (!s) {
            throw 'non t W', C;
        }
        C.c.J = s;
        C.sc.W = s;
        A.c.Jup = A[4];
        A.c.Jcv = 0.1;
        
        };
    J	13		{"acgt":"s","act":"1","coded":"1","dige":"42c54e5e4721","gk":"J","js":"n","nk":"c","v":"cJ","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        var upn = A.n.up.n;
        if (upn && upn.c.T) {
            T.oT = upn.c.T;
        }
        
        if (C.sc.J) {
            return;
        }
        
        A.c.Jup = A.c.Jup || A[1];
        A.c.Jcv = A.c.Jcv || C.y.cv;
        
        var J;
        if (!A.c.nomem) {
            // or G.h(A,C,G,T,'pint',A.c.Jup,sc=>Jtv=>C.t,A.c.Jcv)
            // and so A.c.Jup.sc.Jtv babs to check each non-nk piece like so:
            var Jtv = A.c.Jup && A.c.Jup.sc.Jtv;
            if (Jtv && Jtv[C.t] && Jtv[C.t][A.c.Jcv])
                J = Jtv[C.t][A.c.Jcv]
            // so lets share the Jup stasher
            A.c.Jupstash = function(){
                if (!A.c.Jup) { // weirdness
        G.h(A,C,G,T,"c",'noJup',[A]);
                    if (A[1] == A[1]) {
                        G.h(A,C,G,T,"c",'noJup,A1=2',[ki(C)]);
                    }
                    A.c.Jup = A[2];
                }
                A.c.Jup.sc.Jtv = A.c.Jup.sc.Jtv || {};
                A.c.Jup.sc.Jtv[C.t] = A.c.Jup.sc.Jtv[C.t] || {};
                A.c.Jup.sc.Jtv[C.t][A.c.Jcv] = C.sc.J;
            };
        }
        if (J) {
            C.sc.J = J;
        }
        
        if (A.c.twotoeight) {
            T.oT.op = J && J.sc.s && J.sc.s.sc.top;
            return T.not = '2->8'
        }
        
        if (!C.sc.J) {
            C.sc.J = G.h(A,C,G,T,'J',A.c.Jup,C.t);
        }
        A[2] = A[1];
        A[1] = C.sc.J;
        if (C.c.W) {
            A[3] = C.sc.J[3] = C.sc.J;
        }
        A[1].c.s = C;
        A[1].c.T = T;
        
        
        };
    M	2		{"acgt":"s","act":"1","coded":"1","dige":"e74cdd0394ac","gk":"M","js":"n","nk":"c","v":"cM","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        if (!C.c.M.length) {
            delete C.c.M; return
        }
        if (!A.c.iM) {
            // cursor to resync to the same one
            A.c.iM = 0;
            var cv = A.c.Mcv || 0.300;
            // ground to set order
            var g = A.ground;
            if (A.c.Mground) {
                g = A.c.Mground;
            }
            if (!g) {
                return;
            }
            g.sc.z = g.sc.z || [];
            C.c.M.map(function(n){
                // give yA
                var Y = G.h(A,C,G,T,'Aye','n',0,n);
                g.sc.z.push(n);
                if (n.y.cv) {
                    return
                }
                // suggest y.cv of 30i+
                n.y.cv = G.h(A,C,G,T,'desca',cv,8);
                cv += 0.001;
            });
            // keep placement but figure
            if (C.c.reverse) {
                C.c.M.reverse();
            }
        }
        A.c.tow = function(ov){
            while (C.c.M[A.c.iM]) {
                var n = C.c.M[A.c.iM];
                var Y = n.y.A;
                //~>3 catchuppy: A[1].t, n.t, Y.cv, ov
                G.h(A,C,G,T,'thro',Y,ov);
                // advance to next n if that worked
                A.c.iM++;
                // fail/async/retry if Y.cv < ov?
                //  doesn't really mean anything for n?
            }
            // still here? 
            A.c.iM = 0
        };
        // async happens
        A.c.tow(7);
        A.c.tow(8);
        // TODO hide from G.h(A,C,G,T,'Hut')
        delete C.c.M;
        
        
        };
    pi	3		{"acgt":"s","act":"1","coded":"1","dige":"462f042fb122","gk":"pi","js":"n","nk":"c","v":"cpi","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        C.sc.pi = s;
        A[1].c.d = A[2].c.d ? A[2].c.d + 1 : 1;
        
        };
    J	6		{"acgt":"s","act":"1","coded":"1","dige":"63e08e2ec700","gk":"J","js":"n","nk":"c","v":"cJ","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        if (T.nose) {
            return G.h(A,C,G,T,"c",'knows',[C.t]);
        }
        
        A.c.pin = A.c.pin || C.c.pin || A[1].c.pin || C.c.J || C.sc.J.t;
        A.c.page = A.c.page || '';
        
        // start each W as Normal, wander
        A.I = A[1] == A[3] ? A[4].I : A[2].I;
        
        // ground and root could be the same thing
        // as long as s knows 9sJ is not foreign
        // nice having yourself
        A[1].sc.grounds = A[1].sc.grounds || {};
        A[1].sc.grounds[A.c.page] = A.ground = G.h(A,C,G,T,'Cye',[A.c.page,1,{},{J:C.sc.J}]);
        if (A[1][2].c.imping) {
            A[1].c.imping++ // reset lv
        }
        
        var ise = '';
        if (C.c.e) {
            ise = " (e:"+C.c.e.t+")";
        }
        var de = "("+A.c.pin+")"+ise;
        if (A[1].t == A.c.pin) {
            de = ise
        }
        if (!A[1].sc.brains) {
        G.h(A,C,G,T,"c",'>2 J',[A[1].t, de]);
        }
        else {
        G.h(A,C,G,T,"c",'>6 J',[A[1].t, de]);
        }
        
        var y = {cv:0.9};
        var r = A.r = A[1].sc.root = G.h(A,C,G,T,'Cye',[A[1].t,y,{root:1},{}]);
        // y like a T apart from?
        y.sc = r.sc;
        y.c = r.c;
        G.h(A,C,G,T,'Aye','n',0,r);
        // begin 9 n so it hangs on to Normal A.I
        // will be last unless we can nonrethro its 1?
        var ar = C.c.ar || {};
        var s = ar.s = C.c.s;
        var M = r.c.M = ar.M = [];
        ar.y = y; // bundle of wires
        ar.J = A[1]; // yourself
        // if we make an Error can we rethrow it keeping its origin?
        // catch use case:
        //   the throw from G.h(A,C,G,T,'TuneTimeMachine') wants to abort pin/doming,
        //   put this A:n into A[1].sc.N, but A[1] isn't yet in A[4]...
        //   it wants to T.nose=6 with instant bail out of the pin...
        
        
        try {
            G.h(A,C,G,T,'way',A.c.pin,ar);
        }
        catch (er) {
            if (A.c.onbail) {
                A.c.onbail.map(function(cb){ cb(er) })
            }
            var waits = (er.message || er).match(/^waits/);
            if (!waits) {
                (er.catches = er.catches || []).push({stack:er.stack,tc:["pin:"+A.c.pin]}); throw er;
            }
            // waits means progress halted abruptly
        }
        
        delete y.c; delete y.sc;
        if (T.nose) {
            return;
        }
        
        if (A[1][2].c.imping) {
            y.imp = 1
        }
        if (y.imp) {
            A[1].c.imping = 1; delete y.imp;
        }
        
        if (!M.length) {
            delete c.M
        }
        
        G.h(A,C,G,T,'thro',r,8);
        
        };
    J	7		{"acgt":"s","act":"1","coded":"1","dige":"1f14cd529b81","gk":"J","js":"n","nk":"c","v":"cJ","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        // 8 up J.sc.root, has yA=n, and C.c.M:
        //   full of n things towed by n/M@2
        G.h(A,C,G,T,'thro',A[1].sc.root,8);
        // also anything looking behind
        if (A.ground.sc.z) {
            A.ground.sc.z.map(function(Y){ Y.cv < 0.8 && G.h(A,C,G,T,'thro',Y,8) });
        }
        
        // keep pulling on groundA&
        // say domes are finished (A.ground remaining will do)
        // an empty-ish step here so s can go async and not redo the 6
        if (T.nose != '1') {
            if (A.c.Jupstash) {
                A.c.Jupstash();
            }
            delete A.c.Jupstash;
        }
        
        };
    J	8		{"acgt":"s","act":"1","coded":"1","dige":"72128991e9f2","gk":"J","js":"n","nk":"c","v":"cJ","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        // T.N sets cv=6 and queues A in A[1].sc.N, which 4 finds via Jtv
        if (T.nose == '6') {
            delete T.nose; return T.N = 6;
        }
        if (T.nose == '2') {
            T.not = 1
        }
        if (T.nose == '7') {
            delete T.nose
        }
        if (T.nose) {
            return G.h(A,C,G,T,"c",'knows',[C.t]);
        }
        
        G.h(A,C,G,T,'s');
        
        // acgt/sMJ/etc hook protocols, and where they go?
        //Rw $_ - $J for @{A.c.wayght||[]};
        //$_->($J) for @{A.c.codeght||[]};
        
        if (T.oT && A[1].sc.s) {
            T.oT.op = A[1].sc.s.sc.top;
        }
        
        };
    sweet_music	8		{"acgt":"s","act":"1","any":"1","coded":"1","dige":"a663f9b17731","js":"n","v":"csweet_music","args":"A,C,G,T,s","Wavel":"NutJaying"}
      c s: |
        function(A,C,G,T,s) {
        // has something to do with comp-letion
        
        };
  eye	001	W:javascript
    clusp			{"acgt":"s","coded":"1","dige":"0b1def1fe8f3","js":"eye","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        if (!A[4].sc.NormalI) {
            return
        }
        
        // a u still, could lead to not picking it up when elvising?
        if (A[1].sc.u && A[1].sc.u.c.N && A[1].sc.u.c.N.length == 0) {
            return
        }
        
        var u = G.h(A,C,G,T,'sJ','u');
        u.c.is = 'mind';
        var J = A[1];
        var I;
        
        var A = G.h(A,C,G,T,'Aye','clusping',0);
        A[1] = u;
        A[2] = J;
        
        var N = A[1].c.N || [];
        // squash the [''], from: u ''
        if (G.h(A,C,G,T,'datam',N,"[['']]")) {
            N = [];
        }
        
        A[1].c.N = [];
        
        if (N.length) {
            // local A.trip, A.c.trip;
            // anyway, check form and name the wave of u
        
            // always assumed to be difference from Normal
            // should be able to get it to wake by C.sc.v++ through A[4].sc.mind.Normal
            // it (A:u' for Normal) would have a lot of A.sc.N
            var Normal = G.h(A,C,G,T,'Cye',['Normal',1,{I:A[4].sc.NormalI}]);
            N.unshift(Normal);
        
            var NisWs = 1;
            var con = [];
            for (var i in N) {
            var n = N[i];
                if (n.constructor == Object) {
                    con.push(n.t); continue
                }
                if (G.h(A,C,G,T,'datam',n,"['*']")) {
                    con.push(n[0]); continue
                }
                NisWs = 0;
            }
            if (!NisWs) {
                {var er = new Error("Complicated u Cs"); er.tc = [s]; throw er}
            }
            var uname = A.sc.uname = con.join(',');
        
            // A:u resyncs
            A[1].sc.minds = A[1].sc.minds || {};
            var newuname = !A[1].sc.minds[uname];
            var Y = A[1].sc.minds[uname];
        
            if (Y) {
                // A:u comes back to itself
                // u 8 checks use-by dates of u', which TN=3 if check needed
                //   means it does 3 in this thro,
                //   and come out wanting to go async,
                G.h(A,C,G,T,'thro',Y,8);
            }
            else {
                var C = G.h(A,C,G,T,'Cye',[uname,'',{N:N}]);
                Y = G.h(A,C,G,T,'Aye','u',8,{s:C});
            }
        
            // shelve
            A[1].sc.minds[uname] = Y;
        
            // wake us
            Y.sc.N = Y.sc.N || [];
            Y.sc.N.push(A);
        
            if (Y.cv < 0.8) {
                throw new Error("async clusp: "+Y.c.s.t);
            }
            if (!Y.sc.I) {
                {var er = new Error("No I back"); er.tc = [uname, Y]; throw er}
            }
            if (newuname) {
                G.h(A,C,G,T,"c",'>5 u!',[uname]);
            }
            I = Y.sc.I;
        }
        else {
            // clone I?
            // A:u anyway so everything can have depends on Normal?
            I = A[4].sc.NormalI;
        };
        
        J.I = I;
        
        // get this A:n new mind for the next step
        // (seek=0 redoes this step, seek=3 does 3 onward, etc)
        T.seek = '';
        
        };
    e			{"acgt":"c s","args":"A,C,G,T,c,s","coded":1,"dige":"58a9c0932a8d","js":"eye","Wavel":"NutJayTo"}
      c s: |
        function(A,C,G,T,c,s) {
        C = c;
        c = {};
        if (C.constructor == Array) {
            C = G.h(A,C,G,T,'Cye',C)
        }
        if (s && s.constructor == Array) {
            s = G.h(A,C,G,T,'Cye',s)
        }
        // if first C is {} but not C it is A.c spec,
        // and second becomes first: like n with A.c spec
        if (!(C.y && C.c && C.sc)) {
            c = C; C = s; s = null;
        }
        if (!C) {
            throw new Error("No C spec");
        }
        if (s) {
            C.c.e = s
        }
        c.nogro = 1;
        c.s = C;
        
        // < should same say function as J creation
        var et = ''
        if (s) {
            et = s.t
        }
        G.h(A,C,G,T,"c",'e',[C.t, et]);
        
        var Y = G.h(A,C,G,T,'Aye','n',0,c);
        try {
            G.h(A,C,G,T,'thro',Y,c.ov||8)
        }
        catch (er) {
            var async = (er.message || er).match(/^async/);
            var title = "via "+A[1].t+" e "+C.t;
            if (!async || Y.c.T.sync) {
                (er.catches = er.catches || []).push({stack:er.stack,tc:[title]}); throw er;
            }
        G.h(A,C,G,T,"c",'>9 evoidsync',[title]);
            G.h(A,C,G,T,'Ban',er);
            // give async e to 4, as their J may not be Jtv'd yet
            A[4].sc.N.push(Y);
        }
        return Y.c.s
        
        };
    J			{"acgt":"J s","args":"A,C,G,T,J,s","coded":1,"dige":"a29a14b25b0e","js":"eye","Wavel":"NutJayTo"}
      c s: |
        function(A,C,G,T,J,s) {
        if (typeof J == 'string') {
            s = J; J = A[1];
        }
        var V = A;
        var A = J||A;
        var J = G.h(A,C,G,T,'Aye',s);
        // on a chain
        J[2] = J[1];
        J[1] = J;
        // pulls A
        J.sc.N = J.sc.N || [];
        return J
        
        };
    m			{"acgt":"M s","args":"A,C,G,T,M,s","coded":1,"dige":"9b214b81f338","js":"eye","Wavel":"NutJayTo"}
      c s: |
        function(A,C,G,T,M,s) {
        if (typeof s != 'object') {
            throw new Error("weird M s"+s);
        }
        if (typeof M != 'object') {
            throw new Error("weird M"+M);
        }
        //G.h(A,C,G,T,'clusp');
        C = G.h(A,C,G,T,'Cye',s);
        M.push(C);
        return C
        
        };
    n			{"acgt":"s ov","args":"A,C,G,T,s,ov","coded":1,"dige":"6891daf48202","js":"eye","Wavel":"NutJayTo"}
      c s: |
        function(A,C,G,T,s,ov) {
        if (typeof s != 'object') {
            {var er = new Error("weird n"); er.tc = [s]; throw er}
        }
        //G.h(A,C,G,T,'clusp');
        
        var C = G.h(A,C,G,T,'Cye',s);
        if (T.nN) {
            T.nN.push(C); return C
        }
        var c = {};
        if (typeof ov == 'object') {
            c = ov; ov = null;
        }
        var Y = G.h(A,C,G,T,'Aye','n',0,C,c);
        
        var ret = ov ? Y : C;
        
        try {
            G.h(A,C,G,T,'thro',Y,ov||8)
        }
        catch (e) {
            var async = (e.message || e).match(/^async/);
            var title = "via "+A[1].t+" e "+C.t;
        
            if (async && (Y.c.async || A.c.async)) {
        G.h(A,C,G,T,"c",'>99 nasync',[e.message, title]);
                return ret
            }
            // TES top level continues
            if (!Y.c.T.oT) {
                A[4].sc.N.push(Y);
            }
        
        G.h(A,C,G,T,"c",'>9 nvoidsync',[title]);
        
            if (!async || Y.c.T.sync) {
                // error is not about async
                // , or we can't handle it being ab
                //e.tc = e.tc || [];
                //e.tc.unshift(title);
                (e.catches = e.catches || []).push({stack:e.stack,tc:["inn"]}); throw e;
            }
            // throw means pin must redo to retrigger this n
            (e.catches = e.catches || []).push({stack:e.stack,tc:["inn"]}); throw e;
            // J7 could find ground yAcv < 8
        }
        
        return ret
        
        };
    sJ			{"acgt":"J s","args":"A,C,G,T,J,s","coded":1,"dige":"f7b59465a9f8","js":"eye","Wavel":"NutJayTo"}
      c s: |
        function(A,C,G,T,J,s) {
        if (typeof J == 'string') {
            s = J; J = A[1];
        }
        if (J.sc[s]) {
            return J.sc[s];
        }
        var j = G.h(A,C,G,T,'J',J,s);
        J.sc[s] = j;
        j.I = A[4].I;
        return j
        
        };
    u			{"acgt":"s","coded":"1","dige":"d02ec7757727","js":"eye","args":"A,C,G,T,s","Wavel":"NutJayTo"}
      c s: |
        function(A,C,G,T,s) {
        var u = G.h(A,C,G,T,'sJ','u');
        u.c.N = u.c.N || [];
        u.c.N.push(s);
        if (s.constructor == Array && s[0] == '') {
            G.h(A,C,G,T,'clusp')
        }
        
        };
  u	001	W:javascript
    u			{"acgt":"s","act":"1","any":"1","coded":"1","dige":"7eb6a385983e","js":"u","v":"cu","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        A.u = A;
        C.y.A = C.y.A || A;
        if (C.y.A != A) {
            {var er = new Error("wild C"); er.tc = [C]; throw er}
        }
        };
    N	11		{"acgt":"s","act":"1","coded":"1","dige":"28f327d60305","gk":"N","js":"u","nk":"c","v":"cN","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        var N = s;
        // A:u sprouts A:u's
        A.sc.z = [];
        for (var i in N) {
            var n = N[i];
            var t;
            if (n.constructor == Object) {
                t = n.t;
            }
            else {
                // just a t means W    # ]
                if (!G.h(A,C,G,T,'datam',n,"['*']")) {
                    {var er = new Error("NonWt u"); er.tc = [n]; throw er}
                }
                t = n[0];
            }
            // A:u's may resync
            A[4].sc.mind = A[4].sc.mind || {};
            var Y = A[4].sc.mind[t];
        
            if (!Y) {
                var C = G.h(A,C,G,T,'Cye',n);
                // being stylehut means javascript
                if (!C.c.I) {
                    C.c.W = 'javascript';
                }
                Y = G.h(A,C,G,T,'Aye','u',2,{s:C});
            }
        
            // shelve
            A[4].sc.mind[t] = Y;
        
            // wake us
            Y.sc.N = Y.sc.N || [];
            Y.sc.N.push(A);
        
            // them
            A.sc.z.push(Y);
        }
        // proceed to succeed
        A.cv = 0.8;
        
        };
    W	12		{"acgt":"s","act":"1","coded":"1","dige":"d7239041d1f4","gk":"W","js":"u","nk":"c","v":"cW","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        if (s == 'javascript') {
            C.c.js = C.t
        }
        
        };
    js	3		{"acgt":"s","act":"1","coded":"1","dige":"e7509d65a652","gk":"js","js":"u","nk":"c","v":"cjs","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        A.sc.I = {};
        // lookup code, come back:
        var get = '/js/'+C.t;
        // T would put this C.c.v to wind back from bugs
        if (C.c.v) {
            get += '-'+C.c.v;
        }
        $.ajax(get).done(function(s,how,c){
            if (how != 'success') {
                {var er = new Error("Failed request: "+how); er.tc = [c]; throw er}
            }
            var src = c.getResponseHeader('Location');
            var m = src.match('^\/js\/(\\w+)-(\\w+)(\\.js)');
            var W = m[1];
            var ver = m[2];
        
            // others can let us know 
            A.sc.v = C.sc.v = ver;
            A.sc.now = G.h(A,C,G,T,'time');
        
            var callback = function(script,e){
                // check for errors from that script?
                var tocfunc = W+'_'+ver;
                var toc = window[tocfunc]();
                var D;
                for (var k in toc) {
                    var v = toc[k];
                    var ind = v[0];
                    var t = v[1];
                    var cv = v[2];
                    var c = v[3];
                    var sc = v[4];
                    var C = {t:t, y:{cv:cv}, c:c, sc:sc};
                    if (ind == '') {
                        D = A.sc.I[t] = C;
                        D.y.tw = {};
                        D.y.tv = {};
                        D.sc.z = D.sc.z || [];
                    }
                    else if (ind == '  ') {
                        if (D.t != C.sc.js) {
                            {var er = new Error("Csjs not last D"); er.tc = [C, D]; throw er}
                        }
                        C.c.code = window[C.sc.name];
                        if (typeof C.c.code != 'function') {
                            {var er = new Error("Cccode not function"); er.tc = [C, D]; throw er}
                        }
                        // grow I
                        D.y.tv[C.t] = D.y.tv[C.t] || {};
                        D.y.tv[C.t][C.y.cv] = C;
                        D.y.tw[C.t] = C;
                        var l = D.sc.z.slice(-1);
                        if (l[0]) {
                            l[0].y.next = C;
                        }
                        D.sc.z.push(C);
                        D.y.in = D.y.in || C;
                        if (D.t === 'i' && (C.t === 'h' || C.t === 't')) {
                            G[C.t] = C.c.code;
                        }
                    }
                    else {
                        {var er = new Error("deep C: "+W+"/"+t); er.tc = [v]; throw er}
                    }
                }
        
                A.cv = 0.4;
                A.sc.ready = 1;
            };
        
            var have = $('body script[src="'+src+'"]');
            if (have.length) {
                return callback();
            }
            G.h(A,C,G,T,'add_script',src,callback);
        });
        
        A.sc.ready = 0;
        A[4].sc.N.push(A);
        T.not = 1;
        
        //   fail, chase W startup
        //   uptodate TN8
        
        // get, callback fills in A.c.v
            // so the bunch assembles on A[1].sc.minds[uname] = A:u with sc.I
        
            // have to use Js if complex, eg T wants to mess with it
        
            // build out of A:u if possible, or doing a J if any C specifics
            // an A:u 6 unifies A:u 3s, and A:u 7s compile it, 5wichboard 4ces
            // present N into A:u
            // another A.u
        
        };
    N	6		{"acgt":"s","act":"1","coded":"1","dige":"8075027704aa","gk":"N","js":"u","nk":"c","v":"cN","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        var have = [];
        // write this next bit:
        // the AC in A.sc.z require A.sc.I & C.sc.v: have.push(C.t+' '+C.sc.v)
        for (var i in A.sc.z) {
            var Y = A.sc.z[i];
            // u' 8 should have I
            if (!Y.sc.I) {
                throw "No I back"+A[4].sc.ki(Y)
            }
            var D = Y.c.s;
            if (!D.sc.v) {
                {var er = new Error("u' with no version"); er.tc = [D]; throw er}
            }
            have.push(D.t+' '+D.sc.v);
        }
        have = have.join(', ');
        
        //have == A.sc.have and return
        // mix them all together...
        
        var hup = function(s){
            var C = {y:{},c:{},sc:{}};
            C.t = s.t;
            C.y.cv = s.y.cv;
            //$.extend(C.y,s.y);
            $.extend(C.c,s.c);
            $.extend(C.sc,s.sc);
            return C
        };
        var I = {}; // t:I with .y.tv for
        // can be t:cv:I?
        for (var i in A.sc.z) {
            var Y = A.sc.z[i];
            if (!Y.sc.I) {
                {var er = new Error("no I on u'"); er.tc = [Y]; throw er}
            }
            var C = Y.c.s;
            //
            for (var of in Y.sc.I) {
            var W = Y.sc.I[of];
                var z = W.sc.z;
                if (!z) {
                    {var er = new Error("No items in We"); er.tc = [W]; throw er}
                }
                c = I[W.t];
                if (c) {
                    c.sc.contrib += ','+C.t;
                    c.sc.many_contrib = 1;
                    W = c;
                }
                else {
                    W = hup(W);
                    W.sc.z = [];
                    W.y.tv = {};
                    W.y.tw = {};
                    W.sc.contrib = C.t;
                    I[W.t] = W;
                }
                for (var i in z) {
            var D = z[i];
                    // dedup (z and many-z/A.sc.z/u order matters)
                    if (W.y.tv[D.t] && W.y.tv[D.t][D.y.cv]) {
                        var was = W.y.tv[D.t] && W.y.tv[D.t][D.y.cv];
                        var rz = [];
                        for (var i in W.sc.z) {
            var E = W.sc.z[i];
                            if (E != was) {
                                rz.push(E);
                            }
                        }
                        W.sc.z = rz;
                        if (W.y.tw[D.t] == was) {
                            delete W.y.tw[D.t]
                        }
                    }
                    W.y.tv[D.t] = W.y.tv[D.t] || {};
                    W.y.tv[D.t][D.y.cv] = D;
                    W.y.tw[D.t] = W.y.tw[D.t] || D;
                    W.sc.z.push(D);
                }
            }
        }
        
        for (var of in I) {
            var W = I[of];
            // concatenated zs for this W must be sorted
            if (W.sc.many_contrib) {
                delete W.sc.many_contrib;
                W.sc.z = W.sc.z.sort(function(a,b){
                    return a.y.cv < b.y.cv ? -1 : a.y.cv > b.y.cv ? 1
                    : a.t < b.t ? -1 : a.t > b.t ? 1
                    : 0
                });
            }
            var la = null;
            for (var i in W.sc.z) {
            var D = W.sc.z[i];
                if (typeof D.c.code != 'function') {
                    {var er = new Error("no Dccode"); er.tc = [W, D]; throw er}
                }
                if (!la) {
                    W.y.in = D;
                }
                else {
                    la.y.next = D;
                    D.y.prev = la;
                }
                la = D;
            }
        }
        
        A.sc.I = I;
        A.sc.have = have;
        
        
        //c whatif
        if (Y != A) {
            // here u = J.sc.u, the u J:
        
            // A:u A.sc.N's the A.clusping waiting on it,
            //  for A[4].sc.N when done
            //     or we could put the A.clusping into u.sc.N
            //      u = A.clusping[1], so
            //       u.sc.Ns['N'](A,C,G,T) and A[3].sc.N that 1
            //      which it will see is 
            //   for 4 will rethro A:n from the last W,
            //    with (A[3].sc.N) intention to get this one A:n finished
            //     or perhaps a couple of A:n inside of each other
            //     but the thing about A:clusping is casually ignored,
            //     trusting the action to find its way through to that
            //     (and succeed immediately)
            //     
            //    which is a non-pin act, some osc? depends where it is,
            //    if it is FactorEase'd into pin process do that
            //    usually we can static update one thing and see how
            //    it mixes up in osc, eg. things swim,
            //    or it might just change a link
        
            // so A:u know A.clusping to get back to Jaction, once:
        
            // A:u's A.sc.N the A:u waiting on it,
            //  so all those A:u's A.sc.N's of A.clusping's are:
            //   sent to their A[1].sc.N 
            //   or their A[3].sc.N, who will be from 4 cos C.sc.N
            //   then it groups the desires in its A[1].sc.N,
            //   like it's receiving codechange to be with,
            //   and the limb of A:n it converns
        
            // a chunk of this ^ should 
        
            // so the A[4].sc.N reader is wanting grouped to 3-
            // it also picks up on Jtv's A[3].sc.N being there,
            // each A is the last in a chain reaction to resume
            //  eg A:n(W:Typ) > A:clusping
        
            // the A:n can be resync'd?
            // the A:n may have A:other then A:clusping,
        
        
            // and A[4].sc.N A grouped by A[3] can become A[3].sc.N,
            // it is a general pay-attention scheme,
        
            // A:n that W make borders/relationabla,
            //   the thing can be figured/resolved below
            //   and push its content to the yonder A:n,
            //    if they really need it, it may be just a link
            //    or it may require pinning,
            //      since FactorEase connected it into a process that
            //      must then be shunted along
            // the A:n upward should correlate to the
        
        }
        
        };
    I	8		{"acgt":"s","act":"1","coded":"1","dige":"34a32ac96377","gk":"I","js":"u","nk":"c","v":"cI","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        A.sc.I = C.c.I;
        C.sc.v = C.sc.v || 3; // bring from hut init/jsung?
        A.sc.v = C.sc.v;
        A.sc.now = G.h(A,C,G,T,'time');
        
        };
    N	8		{"acgt":"s","act":"1","coded":"1","dige":"8923e1c31a60","gk":"N","js":"u","nk":"c","v":"cN","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        var not
        // check u' 8
        for (var i in A.sc.z) {
            var Y = A.sc.z[i];
            // u' 8 checks the linkage/version on some object
            // winds back to 3 if not
            G.h(A,C,G,T,'thro',Y,8);
            if (Y.cv < 0.8) {
                not = 1;
            }
        }
        if (not) {
            // set u < 8, so above knows just like we know u' < 8
            // so u 8 checks again, u 6 mixes when u' 8
        G.h(A,C,G,T,"c",'>5 u rewind',[C.t]);
            A.cv = 0.7;
            return T.not = 2;
            // they have A[4].sc.N to bring them back,
            // who must also take care of their A.sc.N,
            // bringing back our A:u,
            // and must also take care of that A.sc.N,
            // bringing back A.cluspings,
            // who without a T is gone past/up to:
            // the A:n that wants to thro some more
        }
        // check versions given by u' to what we last took in
        var have = [];
        for (var i in A.sc.z) {
            var Y = A.sc.z[i];
            var D = Y.c.s;
            if (!D.sc.v) {
                {var er = new Error("u' with no version"); er.tc = [D]; throw er}
            }
            have.push(D.t+' '+D.sc.v);
        }
        have = have.join(', ');
        
        if (have != A.sc.have) {
            return T.seek = 6;
        }
        
        //
        // be simple
        
        };
    W	8		{"acgt":"s","act":"1","coded":"1","dige":"3187bac0ff9f","gk":"W","js":"u","nk":"c","v":"cW","args":"A,C,G,T,s","Wavel":"NutMind"}
      c s: |
        function(A,C,G,T,s) {
        var ttl = (A[4].c.ttl || 5) * 2;
        var ok = A.sc.I
            && C.sc.v == A.sc.v
            && A.sc.now && G.h(A,C,G,T,'time',A.sc.now,ttl);
        if (ok) {
            if (A.cv < 0.8) {
                G.h(A,C,G,T,"c",'>5 u W',[C.t]);
            }
            return
        }
        T.seek = 3;
        
        };
  NutJaying			W:NutJaying,ha:f8043ec21d90
  NutMind			W:NutMind,ha:19152c5f2684
  NutJayTo			W:NutJayTo,ha:0c280a98aefa
